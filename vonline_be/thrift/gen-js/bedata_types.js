//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


if (typeof com === 'undefined') {
  com = {};
}
if (typeof com.vmesteonline === 'undefined') {
  com.vmesteonline = {};
}
if (typeof com.vmesteonline.be === 'undefined') {
  com.vmesteonline.be = {};
}
com.vmesteonline.be.MessageType = {
'BASE' : 1,
'DIALOG' : 2,
'SHOP' : 3,
'NEWS' : 4
};
com.vmesteonline.be.FriendshipType = {
'UNCONFIRMED' : 0,
'CONFIRMED' : 1,
'REQUESTED' : 2,
'WAIT_CONFIRMATION' : 3,
'HIDE' : 4
};
com.vmesteonline.be.Group = function(args) {
  this.id = null;
  this.locationId = null;
  this.creatorId = null;
  this.comment = null;
  this.shortName = null;
  this.name = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.locationId !== undefined) {
      this.locationId = args.locationId;
    }
    if (args.creatorId !== undefined) {
      this.creatorId = args.creatorId;
    }
    if (args.comment !== undefined) {
      this.comment = args.comment;
    }
    if (args.shortName !== undefined) {
      this.shortName = args.shortName;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
com.vmesteonline.be.Group.prototype = {};
com.vmesteonline.be.Group.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.locationId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.creatorId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.comment = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.shortName = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.Group.prototype.write = function(output) {
  output.writeStructBegin('Group');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.locationId !== null && this.locationId !== undefined) {
    output.writeFieldBegin('locationId', Thrift.Type.I32, 2);
    output.writeI32(this.locationId);
    output.writeFieldEnd();
  }
  if (this.creatorId !== null && this.creatorId !== undefined) {
    output.writeFieldBegin('creatorId', Thrift.Type.I32, 3);
    output.writeI32(this.creatorId);
    output.writeFieldEnd();
  }
  if (this.comment !== null && this.comment !== undefined) {
    output.writeFieldBegin('comment', Thrift.Type.STRING, 4);
    output.writeString(this.comment);
    output.writeFieldEnd();
  }
  if (this.shortName !== null && this.shortName !== undefined) {
    output.writeFieldBegin('shortName', Thrift.Type.STRING, 5);
    output.writeString(this.shortName);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 6);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.Message = function(args) {
  this.id = null;
  this.parentId = null;
  this.type = null;
  this.topicId = null;
  this.authorId = null;
  this.recipientId = null;
  this.created = null;
  this.edited = null;
  this.approved = null;
  this.content = null;
  this.likes = null;
  this.unlikes = null;
  this.groupId = null;
  this.idForum = null;
  this.idShop = null;
  this.idDialog = null;
  this.idNews = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.parentId !== undefined) {
      this.parentId = args.parentId;
    }
    if (args.type !== undefined) {
      this.type = args.type;
    }
    if (args.topicId !== undefined) {
      this.topicId = args.topicId;
    }
    if (args.authorId !== undefined) {
      this.authorId = args.authorId;
    }
    if (args.recipientId !== undefined) {
      this.recipientId = args.recipientId;
    }
    if (args.created !== undefined) {
      this.created = args.created;
    }
    if (args.edited !== undefined) {
      this.edited = args.edited;
    }
    if (args.approved !== undefined) {
      this.approved = args.approved;
    }
    if (args.content !== undefined) {
      this.content = args.content;
    }
    if (args.likes !== undefined) {
      this.likes = args.likes;
    }
    if (args.unlikes !== undefined) {
      this.unlikes = args.unlikes;
    }
    if (args.groupId !== undefined) {
      this.groupId = args.groupId;
    }
    if (args.idForum !== undefined) {
      this.idForum = args.idForum;
    }
    if (args.idShop !== undefined) {
      this.idShop = args.idShop;
    }
    if (args.idDialog !== undefined) {
      this.idDialog = args.idDialog;
    }
    if (args.idNews !== undefined) {
      this.idNews = args.idNews;
    }
  }
};
com.vmesteonline.be.Message.prototype = {};
com.vmesteonline.be.Message.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.parentId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.type = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.topicId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.authorId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.recipientId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.created = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.edited = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I32) {
        this.approved = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.STRING) {
        this.content = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.I32) {
        this.likes = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.I32) {
        this.unlikes = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 13:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 14:
      if (ftype == Thrift.Type.I32) {
        this.idForum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 15:
      if (ftype == Thrift.Type.I32) {
        this.idShop = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 16:
      if (ftype == Thrift.Type.I32) {
        this.idDialog = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 17:
      if (ftype == Thrift.Type.I32) {
        this.idNews = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.Message.prototype.write = function(output) {
  output.writeStructBegin('Message');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.parentId !== null && this.parentId !== undefined) {
    output.writeFieldBegin('parentId', Thrift.Type.I32, 2);
    output.writeI32(this.parentId);
    output.writeFieldEnd();
  }
  if (this.type !== null && this.type !== undefined) {
    output.writeFieldBegin('type', Thrift.Type.I32, 3);
    output.writeI32(this.type);
    output.writeFieldEnd();
  }
  if (this.topicId !== null && this.topicId !== undefined) {
    output.writeFieldBegin('topicId', Thrift.Type.I32, 4);
    output.writeI32(this.topicId);
    output.writeFieldEnd();
  }
  if (this.authorId !== null && this.authorId !== undefined) {
    output.writeFieldBegin('authorId', Thrift.Type.I32, 5);
    output.writeI32(this.authorId);
    output.writeFieldEnd();
  }
  if (this.recipientId !== null && this.recipientId !== undefined) {
    output.writeFieldBegin('recipientId', Thrift.Type.I32, 6);
    output.writeI32(this.recipientId);
    output.writeFieldEnd();
  }
  if (this.created !== null && this.created !== undefined) {
    output.writeFieldBegin('created', Thrift.Type.I32, 7);
    output.writeI32(this.created);
    output.writeFieldEnd();
  }
  if (this.edited !== null && this.edited !== undefined) {
    output.writeFieldBegin('edited', Thrift.Type.I32, 8);
    output.writeI32(this.edited);
    output.writeFieldEnd();
  }
  if (this.approved !== null && this.approved !== undefined) {
    output.writeFieldBegin('approved', Thrift.Type.I32, 9);
    output.writeI32(this.approved);
    output.writeFieldEnd();
  }
  if (this.content !== null && this.content !== undefined) {
    output.writeFieldBegin('content', Thrift.Type.STRING, 10);
    output.writeString(this.content);
    output.writeFieldEnd();
  }
  if (this.likes !== null && this.likes !== undefined) {
    output.writeFieldBegin('likes', Thrift.Type.I32, 11);
    output.writeI32(this.likes);
    output.writeFieldEnd();
  }
  if (this.unlikes !== null && this.unlikes !== undefined) {
    output.writeFieldBegin('unlikes', Thrift.Type.I32, 12);
    output.writeI32(this.unlikes);
    output.writeFieldEnd();
  }
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 13);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  if (this.idForum !== null && this.idForum !== undefined) {
    output.writeFieldBegin('idForum', Thrift.Type.I32, 14);
    output.writeI32(this.idForum);
    output.writeFieldEnd();
  }
  if (this.idShop !== null && this.idShop !== undefined) {
    output.writeFieldBegin('idShop', Thrift.Type.I32, 15);
    output.writeI32(this.idShop);
    output.writeFieldEnd();
  }
  if (this.idDialog !== null && this.idDialog !== undefined) {
    output.writeFieldBegin('idDialog', Thrift.Type.I32, 16);
    output.writeI32(this.idDialog);
    output.writeFieldEnd();
  }
  if (this.idNews !== null && this.idNews !== undefined) {
    output.writeFieldBegin('idNews', Thrift.Type.I32, 17);
    output.writeI32(this.idNews);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.Topic = function(args) {
  this.id = null;
  this.message = null;
  this.messageNum = null;
  this.viewers = null;
  this.usersNum = null;
  this.lastUpdate = null;
  this.likes = null;
  this.unlikes = null;
  this.rubric = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.message !== undefined) {
      this.message = args.message;
    }
    if (args.messageNum !== undefined) {
      this.messageNum = args.messageNum;
    }
    if (args.viewers !== undefined) {
      this.viewers = args.viewers;
    }
    if (args.usersNum !== undefined) {
      this.usersNum = args.usersNum;
    }
    if (args.lastUpdate !== undefined) {
      this.lastUpdate = args.lastUpdate;
    }
    if (args.likes !== undefined) {
      this.likes = args.likes;
    }
    if (args.unlikes !== undefined) {
      this.unlikes = args.unlikes;
    }
    if (args.rubric !== undefined) {
      this.rubric = args.rubric;
    }
  }
};
com.vmesteonline.be.Topic.prototype = {};
com.vmesteonline.be.Topic.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.message = new com.vmesteonline.be.Message();
        this.message.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.messageNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.viewers = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.usersNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.lastUpdate = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.likes = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.unlikes = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I32) {
        this.rubric = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.Topic.prototype.write = function(output) {
  output.writeStructBegin('Topic');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRUCT, 2);
    this.message.write(output);
    output.writeFieldEnd();
  }
  if (this.messageNum !== null && this.messageNum !== undefined) {
    output.writeFieldBegin('messageNum', Thrift.Type.I32, 3);
    output.writeI32(this.messageNum);
    output.writeFieldEnd();
  }
  if (this.viewers !== null && this.viewers !== undefined) {
    output.writeFieldBegin('viewers', Thrift.Type.I32, 4);
    output.writeI32(this.viewers);
    output.writeFieldEnd();
  }
  if (this.usersNum !== null && this.usersNum !== undefined) {
    output.writeFieldBegin('usersNum', Thrift.Type.I32, 5);
    output.writeI32(this.usersNum);
    output.writeFieldEnd();
  }
  if (this.lastUpdate !== null && this.lastUpdate !== undefined) {
    output.writeFieldBegin('lastUpdate', Thrift.Type.I32, 6);
    output.writeI32(this.lastUpdate);
    output.writeFieldEnd();
  }
  if (this.likes !== null && this.likes !== undefined) {
    output.writeFieldBegin('likes', Thrift.Type.I32, 7);
    output.writeI32(this.likes);
    output.writeFieldEnd();
  }
  if (this.unlikes !== null && this.unlikes !== undefined) {
    output.writeFieldBegin('unlikes', Thrift.Type.I32, 8);
    output.writeI32(this.unlikes);
    output.writeFieldEnd();
  }
  if (this.rubric !== null && this.rubric !== undefined) {
    output.writeFieldBegin('rubric', Thrift.Type.I32, 9);
    output.writeI32(this.rubric);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserMessage = function(args) {
  this.userId = null;
  this.messageId = null;
  this.read = null;
  this.unintrested = null;
  this.like = null;
  this.unlike = null;
  if (args) {
    if (args.userId !== undefined) {
      this.userId = args.userId;
    }
    if (args.messageId !== undefined) {
      this.messageId = args.messageId;
    }
    if (args.read !== undefined) {
      this.read = args.read;
    }
    if (args.unintrested !== undefined) {
      this.unintrested = args.unintrested;
    }
    if (args.like !== undefined) {
      this.like = args.like;
    }
    if (args.unlike !== undefined) {
      this.unlike = args.unlike;
    }
  }
};
com.vmesteonline.be.UserMessage.prototype = {};
com.vmesteonline.be.UserMessage.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.messageId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.read = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.BOOL) {
        this.unintrested = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.like = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BOOL) {
        this.unlike = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserMessage.prototype.write = function(output) {
  output.writeStructBegin('UserMessage');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  if (this.messageId !== null && this.messageId !== undefined) {
    output.writeFieldBegin('messageId', Thrift.Type.I32, 2);
    output.writeI32(this.messageId);
    output.writeFieldEnd();
  }
  if (this.read !== null && this.read !== undefined) {
    output.writeFieldBegin('read', Thrift.Type.BOOL, 3);
    output.writeBool(this.read);
    output.writeFieldEnd();
  }
  if (this.unintrested !== null && this.unintrested !== undefined) {
    output.writeFieldBegin('unintrested', Thrift.Type.BOOL, 4);
    output.writeBool(this.unintrested);
    output.writeFieldEnd();
  }
  if (this.like !== null && this.like !== undefined) {
    output.writeFieldBegin('like', Thrift.Type.BOOL, 5);
    output.writeBool(this.like);
    output.writeFieldEnd();
  }
  if (this.unlike !== null && this.unlike !== undefined) {
    output.writeFieldBegin('unlike', Thrift.Type.BOOL, 6);
    output.writeBool(this.unlike);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserRubric = function(args) {
  this.userId = null;
  this.rubricId = null;
  this.grouId = null;
  this.subscribed = null;
  this.topicsNum = null;
  this.messagesNum = null;
  if (args) {
    if (args.userId !== undefined) {
      this.userId = args.userId;
    }
    if (args.rubricId !== undefined) {
      this.rubricId = args.rubricId;
    }
    if (args.grouId !== undefined) {
      this.grouId = args.grouId;
    }
    if (args.subscribed !== undefined) {
      this.subscribed = args.subscribed;
    }
    if (args.topicsNum !== undefined) {
      this.topicsNum = args.topicsNum;
    }
    if (args.messagesNum !== undefined) {
      this.messagesNum = args.messagesNum;
    }
  }
};
com.vmesteonline.be.UserRubric.prototype = {};
com.vmesteonline.be.UserRubric.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.rubricId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.grouId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.subscribed = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.topicsNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.messagesNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserRubric.prototype.write = function(output) {
  output.writeStructBegin('UserRubric');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  if (this.rubricId !== null && this.rubricId !== undefined) {
    output.writeFieldBegin('rubricId', Thrift.Type.I32, 2);
    output.writeI32(this.rubricId);
    output.writeFieldEnd();
  }
  if (this.grouId !== null && this.grouId !== undefined) {
    output.writeFieldBegin('grouId', Thrift.Type.I32, 3);
    output.writeI32(this.grouId);
    output.writeFieldEnd();
  }
  if (this.subscribed !== null && this.subscribed !== undefined) {
    output.writeFieldBegin('subscribed', Thrift.Type.I32, 4);
    output.writeI32(this.subscribed);
    output.writeFieldEnd();
  }
  if (this.topicsNum !== null && this.topicsNum !== undefined) {
    output.writeFieldBegin('topicsNum', Thrift.Type.I32, 5);
    output.writeI32(this.topicsNum);
    output.writeFieldEnd();
  }
  if (this.messagesNum !== null && this.messagesNum !== undefined) {
    output.writeFieldBegin('messagesNum', Thrift.Type.I32, 6);
    output.writeI32(this.messagesNum);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.Rubric = function(args) {
  this.id = null;
  this.name = null;
  this.description = null;
  this.topicsNum = null;
  this.messagesNum = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.description !== undefined) {
      this.description = args.description;
    }
    if (args.topicsNum !== undefined) {
      this.topicsNum = args.topicsNum;
    }
    if (args.messagesNum !== undefined) {
      this.messagesNum = args.messagesNum;
    }
  }
};
com.vmesteonline.be.Rubric.prototype = {};
com.vmesteonline.be.Rubric.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.description = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.topicsNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.messagesNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.Rubric.prototype.write = function(output) {
  output.writeStructBegin('Rubric');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.description !== null && this.description !== undefined) {
    output.writeFieldBegin('description', Thrift.Type.STRING, 3);
    output.writeString(this.description);
    output.writeFieldEnd();
  }
  if (this.topicsNum !== null && this.topicsNum !== undefined) {
    output.writeFieldBegin('topicsNum', Thrift.Type.I32, 4);
    output.writeI32(this.topicsNum);
    output.writeFieldEnd();
  }
  if (this.messagesNum !== null && this.messagesNum !== undefined) {
    output.writeFieldBegin('messagesNum', Thrift.Type.I32, 5);
    output.writeI32(this.messagesNum);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.Friendship = function(args) {
  this.userId = null;
  this.friendId = null;
  this.state = null;
  if (args) {
    if (args.userId !== undefined) {
      this.userId = args.userId;
    }
    if (args.friendId !== undefined) {
      this.friendId = args.friendId;
    }
    if (args.state !== undefined) {
      this.state = args.state;
    }
  }
};
com.vmesteonline.be.Friendship.prototype = {};
com.vmesteonline.be.Friendship.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.friendId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.state = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.Friendship.prototype.write = function(output) {
  output.writeStructBegin('Friendship');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  if (this.friendId !== null && this.friendId !== undefined) {
    output.writeFieldBegin('friendId', Thrift.Type.I32, 2);
    output.writeI32(this.friendId);
    output.writeFieldEnd();
  }
  if (this.state !== null && this.state !== undefined) {
    output.writeFieldBegin('state', Thrift.Type.I32, 3);
    output.writeI32(this.state);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserTopic = function(args) {
  this.userId = null;
  this.topicId = null;
  this.archived = null;
  this.messagesNum = null;
  this.lastActivity = null;
  this.dolike = null;
  this.readMessageNum = null;
  if (args) {
    if (args.userId !== undefined) {
      this.userId = args.userId;
    }
    if (args.topicId !== undefined) {
      this.topicId = args.topicId;
    }
    if (args.archived !== undefined) {
      this.archived = args.archived;
    }
    if (args.messagesNum !== undefined) {
      this.messagesNum = args.messagesNum;
    }
    if (args.lastActivity !== undefined) {
      this.lastActivity = args.lastActivity;
    }
    if (args.dolike !== undefined) {
      this.dolike = args.dolike;
    }
    if (args.readMessageNum !== undefined) {
      this.readMessageNum = args.readMessageNum;
    }
  }
};
com.vmesteonline.be.UserTopic.prototype = {};
com.vmesteonline.be.UserTopic.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.topicId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.archived = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.messagesNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.lastActivity = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BYTE) {
        this.dolike = input.readByte().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.readMessageNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserTopic.prototype.write = function(output) {
  output.writeStructBegin('UserTopic');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  if (this.topicId !== null && this.topicId !== undefined) {
    output.writeFieldBegin('topicId', Thrift.Type.I32, 2);
    output.writeI32(this.topicId);
    output.writeFieldEnd();
  }
  if (this.archived !== null && this.archived !== undefined) {
    output.writeFieldBegin('archived', Thrift.Type.BOOL, 3);
    output.writeBool(this.archived);
    output.writeFieldEnd();
  }
  if (this.messagesNum !== null && this.messagesNum !== undefined) {
    output.writeFieldBegin('messagesNum', Thrift.Type.I32, 4);
    output.writeI32(this.messagesNum);
    output.writeFieldEnd();
  }
  if (this.lastActivity !== null && this.lastActivity !== undefined) {
    output.writeFieldBegin('lastActivity', Thrift.Type.I32, 5);
    output.writeI32(this.lastActivity);
    output.writeFieldEnd();
  }
  if (this.dolike !== null && this.dolike !== undefined) {
    output.writeFieldBegin('dolike', Thrift.Type.BYTE, 6);
    output.writeByte(this.dolike);
    output.writeFieldEnd();
  }
  if (this.readMessageNum !== null && this.readMessageNum !== undefined) {
    output.writeFieldBegin('readMessageNum', Thrift.Type.I32, 7);
    output.writeI32(this.readMessageNum);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

