//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


if (typeof com === 'undefined') {
  com = {};
}
if (typeof com.vmesteonline === 'undefined') {
  com.vmesteonline = {};
}
if (typeof com.vmesteonline.be === 'undefined') {
  com.vmesteonline.be = {};
}
com.vmesteonline.be.RubricCounter = function(args) {
  this.rubric = null;
  this.messageType = null;
  this.newTopicNum = null;
  this.newMessageNum = null;
  if (args) {
    if (args.rubric !== undefined) {
      this.rubric = args.rubric;
    }
    if (args.messageType !== undefined) {
      this.messageType = args.messageType;
    }
    if (args.newTopicNum !== undefined) {
      this.newTopicNum = args.newTopicNum;
    }
    if (args.newMessageNum !== undefined) {
      this.newMessageNum = args.newMessageNum;
    }
  }
};
com.vmesteonline.be.RubricCounter.prototype = {};
com.vmesteonline.be.RubricCounter.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.rubric = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.messageType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.newTopicNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.newMessageNum = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.RubricCounter.prototype.write = function(output) {
  output.writeStructBegin('RubricCounter');
  if (this.rubric !== null && this.rubric !== undefined) {
    output.writeFieldBegin('rubric', Thrift.Type.I32, 1);
    output.writeI32(this.rubric);
    output.writeFieldEnd();
  }
  if (this.messageType !== null && this.messageType !== undefined) {
    output.writeFieldBegin('messageType', Thrift.Type.I32, 2);
    output.writeI32(this.messageType);
    output.writeFieldEnd();
  }
  if (this.newTopicNum !== null && this.newTopicNum !== undefined) {
    output.writeFieldBegin('newTopicNum', Thrift.Type.I32, 3);
    output.writeI32(this.newTopicNum);
    output.writeFieldEnd();
  }
  if (this.newMessageNum !== null && this.newMessageNum !== undefined) {
    output.writeFieldBegin('newMessageNum', Thrift.Type.I32, 4);
    output.writeI32(this.newMessageNum);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.GroupUpdates = function(args) {
  this.groupCounters = null;
  if (args) {
    if (args.groupCounters !== undefined) {
      this.groupCounters = args.groupCounters;
    }
  }
};
com.vmesteonline.be.GroupUpdates.prototype = {};
com.vmesteonline.be.GroupUpdates.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.MAP) {
        var _size0 = 0;
        var _rtmp34;
        this.groupCounters = {};
        var _ktype1 = 0;
        var _vtype2 = 0;
        _rtmp34 = input.readMapBegin();
        _ktype1 = _rtmp34.ktype;
        _vtype2 = _rtmp34.vtype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          if (_i5 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key6 = null;
          var val7 = null;
          key6 = input.readI32().value;
          val7 = new com.vmesteonline.be.RubricCounter();
          val7.read(input);
          this.groupCounters[key6] = val7;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.GroupUpdates.prototype.write = function(output) {
  output.writeStructBegin('GroupUpdates');
  if (this.groupCounters !== null && this.groupCounters !== undefined) {
    output.writeFieldBegin('groupCounters', Thrift.Type.MAP, 1);
    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.STRUCT, Thrift.objectLength(this.groupCounters));
    for (var kiter8 in this.groupCounters)
    {
      if (this.groupCounters.hasOwnProperty(kiter8))
      {
        var viter9 = this.groupCounters[kiter8];
        output.writeI32(kiter8);
        viter9.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.TopicListPart = function(args) {
  this.topics = null;
  this.totalSize = null;
  if (args) {
    if (args.topics !== undefined) {
      this.topics = args.topics;
    }
    if (args.totalSize !== undefined) {
      this.totalSize = args.totalSize;
    }
  }
};
com.vmesteonline.be.TopicListPart.prototype = {};
com.vmesteonline.be.TopicListPart.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size10 = 0;
        var _rtmp314;
        this.topics = [];
        var _etype13 = 0;
        _rtmp314 = input.readSetBegin();
        _etype13 = _rtmp314.etype;
        _size10 = _rtmp314.size;
        for (var _i15 = 0; _i15 < _size10; ++_i15)
        {
          var elem16 = null;
          elem16 = new com.vmesteonline.be.Topic();
          elem16.read(input);
          this.topics.push(elem16);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.totalSize = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.TopicListPart.prototype.write = function(output) {
  output.writeStructBegin('TopicListPart');
  if (this.topics !== null && this.topics !== undefined) {
    output.writeFieldBegin('topics', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.STRUCT, this.topics.length);
    for (var iter17 in this.topics)
    {
      if (this.topics.hasOwnProperty(iter17))
      {
        iter17 = this.topics[iter17];
        iter17.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.totalSize !== null && this.totalSize !== undefined) {
    output.writeFieldBegin('totalSize', Thrift.Type.I32, 2);
    output.writeI32(this.totalSize);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.MessageListPart = function(args) {
  this.topics = null;
  this.totalSize = null;
  if (args) {
    if (args.topics !== undefined) {
      this.topics = args.topics;
    }
    if (args.totalSize !== undefined) {
      this.totalSize = args.totalSize;
    }
  }
};
com.vmesteonline.be.MessageListPart.prototype = {};
com.vmesteonline.be.MessageListPart.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size18 = 0;
        var _rtmp322;
        this.topics = [];
        var _etype21 = 0;
        _rtmp322 = input.readSetBegin();
        _etype21 = _rtmp322.etype;
        _size18 = _rtmp322.size;
        for (var _i23 = 0; _i23 < _size18; ++_i23)
        {
          var elem24 = null;
          elem24 = new com.vmesteonline.be.Message();
          elem24.read(input);
          this.topics.push(elem24);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.totalSize = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.MessageListPart.prototype.write = function(output) {
  output.writeStructBegin('MessageListPart');
  if (this.topics !== null && this.topics !== undefined) {
    output.writeFieldBegin('topics', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.STRUCT, this.topics.length);
    for (var iter25 in this.topics)
    {
      if (this.topics.hasOwnProperty(iter25))
      {
        iter25 = this.topics[iter25];
        iter25.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.totalSize !== null && this.totalSize !== undefined) {
    output.writeFieldBegin('totalSize', Thrift.Type.I32, 2);
    output.writeI32(this.totalSize);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

