//
// Autogenerated by Thrift Compiler (1.0.0-dev)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

com.vmesteonline.be.UserService_getUserGroups_args = function(args) {
};
com.vmesteonline.be.UserService_getUserGroups_args.prototype = {};
com.vmesteonline.be.UserService_getUserGroups_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserGroups_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserGroups_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserGroups_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getUserGroups_result.prototype = {};
com.vmesteonline.be.UserService_getUserGroups_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.success = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new com.vmesteonline.be.Group();
          elem38.read(input);
          this.success.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserGroups_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserGroups_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter39 in this.success)
    {
      if (this.success.hasOwnProperty(iter39))
      {
        iter39 = this.success[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserRubrics_args = function(args) {
};
com.vmesteonline.be.UserService_getUserRubrics_args.prototype = {};
com.vmesteonline.be.UserService_getUserRubrics_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserRubrics_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserRubrics_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserRubrics_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getUserRubrics_result.prototype = {};
com.vmesteonline.be.UserService_getUserRubrics_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.success = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new com.vmesteonline.be.Rubric();
          elem46.read(input);
          this.success.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserRubrics_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserRubrics_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter47 in this.success)
    {
      if (this.success.hasOwnProperty(iter47))
      {
        iter47 = this.success[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCounties_args = function(args) {
};
com.vmesteonline.be.UserService_getCounties_args.prototype = {};
com.vmesteonline.be.UserService_getCounties_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCounties_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getCounties_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCounties_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getCounties_result.prototype = {};
com.vmesteonline.be.UserService_getCounties_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.success = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = new com.vmesteonline.be.Country();
          elem54.read(input);
          this.success.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCounties_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getCounties_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter55 in this.success)
    {
      if (this.success.hasOwnProperty(iter55))
      {
        iter55 = this.success[iter55];
        iter55.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCities_args = function(args) {
  this.countryId = null;
  if (args) {
    if (args.countryId !== undefined) {
      this.countryId = args.countryId;
    }
  }
};
com.vmesteonline.be.UserService_getCities_args.prototype = {};
com.vmesteonline.be.UserService_getCities_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.countryId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCities_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getCities_args');
  if (this.countryId !== null && this.countryId !== undefined) {
    output.writeFieldBegin('countryId', Thrift.Type.I64, 1);
    output.writeI64(this.countryId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCities_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getCities_result.prototype = {};
com.vmesteonline.be.UserService_getCities_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size56 = 0;
        var _rtmp360;
        this.success = [];
        var _etype59 = 0;
        _rtmp360 = input.readListBegin();
        _etype59 = _rtmp360.etype;
        _size56 = _rtmp360.size;
        for (var _i61 = 0; _i61 < _size56; ++_i61)
        {
          var elem62 = null;
          elem62 = new com.vmesteonline.be.City();
          elem62.read(input);
          this.success.push(elem62);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getCities_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getCities_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter63 in this.success)
    {
      if (this.success.hasOwnProperty(iter63))
      {
        iter63 = this.success[iter63];
        iter63.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getStreets_args = function(args) {
  this.cityId = null;
  if (args) {
    if (args.cityId !== undefined) {
      this.cityId = args.cityId;
    }
  }
};
com.vmesteonline.be.UserService_getStreets_args.prototype = {};
com.vmesteonline.be.UserService_getStreets_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.cityId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getStreets_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getStreets_args');
  if (this.cityId !== null && this.cityId !== undefined) {
    output.writeFieldBegin('cityId', Thrift.Type.I64, 1);
    output.writeI64(this.cityId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getStreets_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getStreets_result.prototype = {};
com.vmesteonline.be.UserService_getStreets_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size64 = 0;
        var _rtmp368;
        this.success = [];
        var _etype67 = 0;
        _rtmp368 = input.readListBegin();
        _etype67 = _rtmp368.etype;
        _size64 = _rtmp368.size;
        for (var _i69 = 0; _i69 < _size64; ++_i69)
        {
          var elem70 = null;
          elem70 = new com.vmesteonline.be.Street();
          elem70.read(input);
          this.success.push(elem70);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getStreets_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getStreets_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter71 in this.success)
    {
      if (this.success.hasOwnProperty(iter71))
      {
        iter71 = this.success[iter71];
        iter71.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getBuildings_args = function(args) {
  this.streetId = null;
  if (args) {
    if (args.streetId !== undefined) {
      this.streetId = args.streetId;
    }
  }
};
com.vmesteonline.be.UserService_getBuildings_args.prototype = {};
com.vmesteonline.be.UserService_getBuildings_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.streetId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getBuildings_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getBuildings_args');
  if (this.streetId !== null && this.streetId !== undefined) {
    output.writeFieldBegin('streetId', Thrift.Type.I64, 1);
    output.writeI64(this.streetId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getBuildings_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getBuildings_result.prototype = {};
com.vmesteonline.be.UserService_getBuildings_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size72 = 0;
        var _rtmp376;
        this.success = [];
        var _etype75 = 0;
        _rtmp376 = input.readListBegin();
        _etype75 = _rtmp376.etype;
        _size72 = _rtmp376.size;
        for (var _i77 = 0; _i77 < _size72; ++_i77)
        {
          var elem78 = null;
          elem78 = new com.vmesteonline.be.Building();
          elem78.read(input);
          this.success.push(elem78);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getBuildings_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getBuildings_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter79 in this.success)
    {
      if (this.success.hasOwnProperty(iter79))
      {
        iter79 = this.success[iter79];
        iter79.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getAddressCatalogue_args = function(args) {
};
com.vmesteonline.be.UserService_getAddressCatalogue_args.prototype = {};
com.vmesteonline.be.UserService_getAddressCatalogue_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getAddressCatalogue_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getAddressCatalogue_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getAddressCatalogue_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getAddressCatalogue_result.prototype = {};
com.vmesteonline.be.UserService_getAddressCatalogue_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.FullAddressCatalogue();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getAddressCatalogue_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getAddressCatalogue_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCountry_args = function(args) {
  this.name = null;
  if (args) {
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
com.vmesteonline.be.UserService_createNewCountry_args.prototype = {};
com.vmesteonline.be.UserService_createNewCountry_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCountry_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewCountry_args');
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 1);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCountry_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_createNewCountry_result.prototype = {};
com.vmesteonline.be.UserService_createNewCountry_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.Country();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCountry_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewCountry_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCity_args = function(args) {
  this.countryId = null;
  this.name = null;
  if (args) {
    if (args.countryId !== undefined) {
      this.countryId = args.countryId;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
com.vmesteonline.be.UserService_createNewCity_args.prototype = {};
com.vmesteonline.be.UserService_createNewCity_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.countryId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCity_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewCity_args');
  if (this.countryId !== null && this.countryId !== undefined) {
    output.writeFieldBegin('countryId', Thrift.Type.I64, 1);
    output.writeI64(this.countryId);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCity_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_createNewCity_result.prototype = {};
com.vmesteonline.be.UserService_createNewCity_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.City();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewCity_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewCity_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewStreet_args = function(args) {
  this.cityId = null;
  this.name = null;
  if (args) {
    if (args.cityId !== undefined) {
      this.cityId = args.cityId;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
com.vmesteonline.be.UserService_createNewStreet_args.prototype = {};
com.vmesteonline.be.UserService_createNewStreet_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.cityId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewStreet_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewStreet_args');
  if (this.cityId !== null && this.cityId !== undefined) {
    output.writeFieldBegin('cityId', Thrift.Type.I64, 1);
    output.writeI64(this.cityId);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewStreet_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_createNewStreet_result.prototype = {};
com.vmesteonline.be.UserService_createNewStreet_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.Street();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewStreet_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewStreet_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewBuilding_args = function(args) {
  this.streetId = null;
  this.fullNo = null;
  this.longitude = null;
  this.lattitude = null;
  if (args) {
    if (args.streetId !== undefined) {
      this.streetId = args.streetId;
    }
    if (args.fullNo !== undefined) {
      this.fullNo = args.fullNo;
    }
    if (args.longitude !== undefined) {
      this.longitude = args.longitude;
    }
    if (args.lattitude !== undefined) {
      this.lattitude = args.lattitude;
    }
  }
};
com.vmesteonline.be.UserService_createNewBuilding_args.prototype = {};
com.vmesteonline.be.UserService_createNewBuilding_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.streetId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.fullNo = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.DOUBLE) {
        this.longitude = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.DOUBLE) {
        this.lattitude = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewBuilding_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewBuilding_args');
  if (this.streetId !== null && this.streetId !== undefined) {
    output.writeFieldBegin('streetId', Thrift.Type.I64, 1);
    output.writeI64(this.streetId);
    output.writeFieldEnd();
  }
  if (this.fullNo !== null && this.fullNo !== undefined) {
    output.writeFieldBegin('fullNo', Thrift.Type.STRING, 2);
    output.writeString(this.fullNo);
    output.writeFieldEnd();
  }
  if (this.longitude !== null && this.longitude !== undefined) {
    output.writeFieldBegin('longitude', Thrift.Type.DOUBLE, 3);
    output.writeDouble(this.longitude);
    output.writeFieldEnd();
  }
  if (this.lattitude !== null && this.lattitude !== undefined) {
    output.writeFieldBegin('lattitude', Thrift.Type.DOUBLE, 4);
    output.writeDouble(this.lattitude);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewBuilding_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_createNewBuilding_result.prototype = {};
com.vmesteonline.be.UserService_createNewBuilding_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.Building();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_createNewBuilding_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_createNewBuilding_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_setUserAddress_args = function(args) {
  this.newAddress = null;
  if (args) {
    if (args.newAddress !== undefined) {
      this.newAddress = args.newAddress;
    }
  }
};
com.vmesteonline.be.UserService_setUserAddress_args.prototype = {};
com.vmesteonline.be.UserService_setUserAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.newAddress = new com.vmesteonline.be.PostalAddress();
        this.newAddress.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_setUserAddress_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_setUserAddress_args');
  if (this.newAddress !== null && this.newAddress !== undefined) {
    output.writeFieldBegin('newAddress', Thrift.Type.STRUCT, 1);
    this.newAddress.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_setUserAddress_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_setUserAddress_result.prototype = {};
com.vmesteonline.be.UserService_setUserAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_setUserAddress_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_setUserAddress_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_addUserAddress_args = function(args) {
  this.newAddress = null;
  if (args) {
    if (args.newAddress !== undefined) {
      this.newAddress = args.newAddress;
    }
  }
};
com.vmesteonline.be.UserService_addUserAddress_args.prototype = {};
com.vmesteonline.be.UserService_addUserAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.newAddress = new com.vmesteonline.be.PostalAddress();
        this.newAddress.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_addUserAddress_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_addUserAddress_args');
  if (this.newAddress !== null && this.newAddress !== undefined) {
    output.writeFieldBegin('newAddress', Thrift.Type.STRUCT, 1);
    this.newAddress.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_addUserAddress_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_addUserAddress_result.prototype = {};
com.vmesteonline.be.UserService_addUserAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_addUserAddress_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_addUserAddress_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserHomeAddress_args = function(args) {
};
com.vmesteonline.be.UserService_getUserHomeAddress_args.prototype = {};
com.vmesteonline.be.UserService_getUserHomeAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserHomeAddress_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserHomeAddress_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserHomeAddress_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getUserHomeAddress_result.prototype = {};
com.vmesteonline.be.UserService_getUserHomeAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.PostalAddress();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserHomeAddress_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserHomeAddress_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserAddresses_args = function(args) {
};
com.vmesteonline.be.UserService_getUserAddresses_args.prototype = {};
com.vmesteonline.be.UserService_getUserAddresses_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserAddresses_args.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserAddresses_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserAddresses_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.UserService_getUserAddresses_result.prototype = {};
com.vmesteonline.be.UserService_getUserAddresses_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.SET) {
        var _size80 = 0;
        var _rtmp384;
        this.success = [];
        var _etype83 = 0;
        _rtmp384 = input.readSetBegin();
        _etype83 = _rtmp384.etype;
        _size80 = _rtmp384.size;
        for (var _i85 = 0; _i85 < _size80; ++_i85)
        {
          var elem86 = null;
          elem86 = new com.vmesteonline.be.PostalAddress();
          elem86.read(input);
          this.success.push(elem86);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.UserService_getUserAddresses_result.prototype.write = function(output) {
  output.writeStructBegin('UserService_getUserAddresses_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.SET, 0);
    output.writeSetBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter87 in this.success)
    {
      if (this.success.hasOwnProperty(iter87))
      {
        iter87 = this.success[iter87];
        iter87.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.UserServiceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
com.vmesteonline.be.UserServiceClient.prototype = {};
com.vmesteonline.be.UserServiceClient.prototype.getUserGroups = function() {
  this.send_getUserGroups();
  return this.recv_getUserGroups();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getUserGroups = function() {
  this.output.writeMessageBegin('getUserGroups', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getUserGroups_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getUserGroups = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getUserGroups_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getUserGroups failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getUserRubrics = function() {
  this.send_getUserRubrics();
  return this.recv_getUserRubrics();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getUserRubrics = function() {
  this.output.writeMessageBegin('getUserRubrics', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getUserRubrics_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getUserRubrics = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getUserRubrics_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getUserRubrics failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getCounties = function() {
  this.send_getCounties();
  return this.recv_getCounties();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getCounties = function() {
  this.output.writeMessageBegin('getCounties', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getCounties_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getCounties = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getCounties_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getCounties failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getCities = function(countryId) {
  this.send_getCities(countryId);
  return this.recv_getCities();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getCities = function(countryId) {
  this.output.writeMessageBegin('getCities', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getCities_args();
  args.countryId = countryId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getCities = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getCities_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getCities failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getStreets = function(cityId) {
  this.send_getStreets(cityId);
  return this.recv_getStreets();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getStreets = function(cityId) {
  this.output.writeMessageBegin('getStreets', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getStreets_args();
  args.cityId = cityId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getStreets = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getStreets_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getStreets failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getBuildings = function(streetId) {
  this.send_getBuildings(streetId);
  return this.recv_getBuildings();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getBuildings = function(streetId) {
  this.output.writeMessageBegin('getBuildings', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getBuildings_args();
  args.streetId = streetId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getBuildings = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getBuildings_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getBuildings failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getAddressCatalogue = function() {
  this.send_getAddressCatalogue();
  return this.recv_getAddressCatalogue();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getAddressCatalogue = function() {
  this.output.writeMessageBegin('getAddressCatalogue', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getAddressCatalogue_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getAddressCatalogue = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getAddressCatalogue_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getAddressCatalogue failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.createNewCountry = function(name) {
  this.send_createNewCountry(name);
  return this.recv_createNewCountry();
};

com.vmesteonline.be.UserServiceClient.prototype.send_createNewCountry = function(name) {
  this.output.writeMessageBegin('createNewCountry', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_createNewCountry_args();
  args.name = name;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_createNewCountry = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_createNewCountry_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'createNewCountry failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.createNewCity = function(countryId, name) {
  this.send_createNewCity(countryId, name);
  return this.recv_createNewCity();
};

com.vmesteonline.be.UserServiceClient.prototype.send_createNewCity = function(countryId, name) {
  this.output.writeMessageBegin('createNewCity', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_createNewCity_args();
  args.countryId = countryId;
  args.name = name;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_createNewCity = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_createNewCity_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'createNewCity failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.createNewStreet = function(cityId, name) {
  this.send_createNewStreet(cityId, name);
  return this.recv_createNewStreet();
};

com.vmesteonline.be.UserServiceClient.prototype.send_createNewStreet = function(cityId, name) {
  this.output.writeMessageBegin('createNewStreet', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_createNewStreet_args();
  args.cityId = cityId;
  args.name = name;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_createNewStreet = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_createNewStreet_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'createNewStreet failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.createNewBuilding = function(streetId, fullNo, longitude, lattitude) {
  this.send_createNewBuilding(streetId, fullNo, longitude, lattitude);
  return this.recv_createNewBuilding();
};

com.vmesteonline.be.UserServiceClient.prototype.send_createNewBuilding = function(streetId, fullNo, longitude, lattitude) {
  this.output.writeMessageBegin('createNewBuilding', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_createNewBuilding_args();
  args.streetId = streetId;
  args.fullNo = fullNo;
  args.longitude = longitude;
  args.lattitude = lattitude;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_createNewBuilding = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_createNewBuilding_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'createNewBuilding failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.setUserAddress = function(newAddress) {
  this.send_setUserAddress(newAddress);
  return this.recv_setUserAddress();
};

com.vmesteonline.be.UserServiceClient.prototype.send_setUserAddress = function(newAddress) {
  this.output.writeMessageBegin('setUserAddress', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_setUserAddress_args();
  args.newAddress = newAddress;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_setUserAddress = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_setUserAddress_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'setUserAddress failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.addUserAddress = function(newAddress) {
  this.send_addUserAddress(newAddress);
  return this.recv_addUserAddress();
};

com.vmesteonline.be.UserServiceClient.prototype.send_addUserAddress = function(newAddress) {
  this.output.writeMessageBegin('addUserAddress', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_addUserAddress_args();
  args.newAddress = newAddress;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_addUserAddress = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_addUserAddress_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addUserAddress failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getUserHomeAddress = function() {
  this.send_getUserHomeAddress();
  return this.recv_getUserHomeAddress();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getUserHomeAddress = function() {
  this.output.writeMessageBegin('getUserHomeAddress', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getUserHomeAddress_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getUserHomeAddress = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getUserHomeAddress_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getUserHomeAddress failed: unknown result';
};
com.vmesteonline.be.UserServiceClient.prototype.getUserAddresses = function() {
  this.send_getUserAddresses();
  return this.recv_getUserAddresses();
};

com.vmesteonline.be.UserServiceClient.prototype.send_getUserAddresses = function() {
  this.output.writeMessageBegin('getUserAddresses', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.UserService_getUserAddresses_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.UserServiceClient.prototype.recv_getUserAddresses = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.UserService_getUserAddresses_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getUserAddresses failed: unknown result';
};
