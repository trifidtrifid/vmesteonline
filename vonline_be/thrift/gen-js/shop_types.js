//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


if (typeof com === 'undefined') {
  com = {};
}
if (typeof com.vmesteonline === 'undefined') {
  com.vmesteonline = {};
}
if (typeof com.vmesteonline.be === 'undefined') {
  com.vmesteonline.be = {};
}
if (typeof com.vmesteonline.be.shop === 'undefined') {
  com.vmesteonline.be.shop = {};
}
com.vmesteonline.be.shop.PriceType = {
'RETAIL' : 0,
'INET' : 1,
'VIP' : 2,
'SPECIAL' : 3
};
com.vmesteonline.be.shop.OrderStatus = {
'UNKNOWN' : 0,
'NEW' : 1,
'PENDING' : 2,
'SHIPPING' : 3,
'DELIVERED' : 4,
'CLOSED' : 5
};
com.vmesteonline.be.shop.DeliveryType = {
'UNKNOWN' : 0,
'SELF_PICKUP' : 1,
'SHORT_RANGE' : 2,
'LONG_RANGE' : 3
};
com.vmesteonline.be.shop.PaymentType = {
'UNKNOWN' : 0,
'CASH' : 1,
'CREDIT_CARD' : 2,
'TRANSFER' : 3
};
com.vmesteonline.be.shop.PaymentStatus = {
'UNKNOWN' : 0,
'CASH' : 1,
'CREDIT_CARD' : 2,
'TRANSFER' : 3
};
com.vmesteonline.be.shop.Shop = function(args) {
  this.id = null;
  this.name = null;
  this.descr = null;
  this.address = null;
  this.logoURL = null;
  this.ownerId = null;
  this.topicSet = null;
  this.tags = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.descr !== undefined) {
      this.descr = args.descr;
    }
    if (args.address !== undefined) {
      this.address = args.address;
    }
    if (args.logoURL !== undefined) {
      this.logoURL = args.logoURL;
    }
    if (args.ownerId !== undefined) {
      this.ownerId = args.ownerId;
    }
    if (args.topicSet !== undefined) {
      this.topicSet = args.topicSet;
    }
    if (args.tags !== undefined) {
      this.tags = args.tags;
    }
  }
};
com.vmesteonline.be.shop.Shop.prototype = {};
com.vmesteonline.be.shop.Shop.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.descr = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.address = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.logoURL = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I64) {
        this.ownerId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.SET) {
        var _size0 = 0;
        var _rtmp34;
        this.topicSet = [];
        var _etype3 = 0;
        _rtmp34 = input.readSetBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI64().value;
          this.topicSet.push(elem6);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.SET) {
        var _size7 = 0;
        var _rtmp311;
        this.tags = [];
        var _etype10 = 0;
        _rtmp311 = input.readSetBegin();
        _etype10 = _rtmp311.etype;
        _size7 = _rtmp311.size;
        for (var _i12 = 0; _i12 < _size7; ++_i12)
        {
          var elem13 = null;
          elem13 = input.readString().value;
          this.tags.push(elem13);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.Shop.prototype.write = function(output) {
  output.writeStructBegin('Shop');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.descr !== null && this.descr !== undefined) {
    output.writeFieldBegin('descr', Thrift.Type.STRING, 3);
    output.writeString(this.descr);
    output.writeFieldEnd();
  }
  if (this.address !== null && this.address !== undefined) {
    output.writeFieldBegin('address', Thrift.Type.STRING, 4);
    output.writeString(this.address);
    output.writeFieldEnd();
  }
  if (this.logoURL !== null && this.logoURL !== undefined) {
    output.writeFieldBegin('logoURL', Thrift.Type.STRING, 5);
    output.writeString(this.logoURL);
    output.writeFieldEnd();
  }
  if (this.ownerId !== null && this.ownerId !== undefined) {
    output.writeFieldBegin('ownerId', Thrift.Type.I64, 6);
    output.writeI64(this.ownerId);
    output.writeFieldEnd();
  }
  if (this.topicSet !== null && this.topicSet !== undefined) {
    output.writeFieldBegin('topicSet', Thrift.Type.SET, 7);
    output.writeSetBegin(Thrift.Type.I64, this.topicSet.length);
    for (var iter14 in this.topicSet)
    {
      if (this.topicSet.hasOwnProperty(iter14))
      {
        iter14 = this.topicSet[iter14];
        output.writeI64(iter14);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.tags !== null && this.tags !== undefined) {
    output.writeFieldBegin('tags', Thrift.Type.SET, 8);
    output.writeSetBegin(Thrift.Type.STRING, this.tags.length);
    for (var iter15 in this.tags)
    {
      if (this.tags.hasOwnProperty(iter15))
      {
        iter15 = this.tags[iter15];
        output.writeString(iter15);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.Producer = function(args) {
  this.id = null;
  this.name = null;
  this.descr = null;
  this.logoURL = null;
  this.homeURL = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.descr !== undefined) {
      this.descr = args.descr;
    }
    if (args.logoURL !== undefined) {
      this.logoURL = args.logoURL;
    }
    if (args.homeURL !== undefined) {
      this.homeURL = args.homeURL;
    }
  }
};
com.vmesteonline.be.shop.Producer.prototype = {};
com.vmesteonline.be.shop.Producer.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.descr = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.logoURL = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.homeURL = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.Producer.prototype.write = function(output) {
  output.writeStructBegin('Producer');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.descr !== null && this.descr !== undefined) {
    output.writeFieldBegin('descr', Thrift.Type.STRING, 3);
    output.writeString(this.descr);
    output.writeFieldEnd();
  }
  if (this.logoURL !== null && this.logoURL !== undefined) {
    output.writeFieldBegin('logoURL', Thrift.Type.STRING, 4);
    output.writeString(this.logoURL);
    output.writeFieldEnd();
  }
  if (this.homeURL !== null && this.homeURL !== undefined) {
    output.writeFieldBegin('homeURL', Thrift.Type.STRING, 5);
    output.writeString(this.homeURL);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductCategory = function(args) {
  this.id = null;
  this.parentId = null;
  this.name = null;
  this.descr = null;
  this.logoURLset = null;
  this.topicSet = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.parentId !== undefined) {
      this.parentId = args.parentId;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.descr !== undefined) {
      this.descr = args.descr;
    }
    if (args.logoURLset !== undefined) {
      this.logoURLset = args.logoURLset;
    }
    if (args.topicSet !== undefined) {
      this.topicSet = args.topicSet;
    }
  }
};
com.vmesteonline.be.shop.ProductCategory.prototype = {};
com.vmesteonline.be.shop.ProductCategory.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.parentId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.descr = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.SET) {
        var _size16 = 0;
        var _rtmp320;
        this.logoURLset = [];
        var _etype19 = 0;
        _rtmp320 = input.readSetBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = input.readString().value;
          this.logoURLset.push(elem22);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.SET) {
        var _size23 = 0;
        var _rtmp327;
        this.topicSet = [];
        var _etype26 = 0;
        _rtmp327 = input.readSetBegin();
        _etype26 = _rtmp327.etype;
        _size23 = _rtmp327.size;
        for (var _i28 = 0; _i28 < _size23; ++_i28)
        {
          var elem29 = null;
          elem29 = input.readI64().value;
          this.topicSet.push(elem29);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductCategory.prototype.write = function(output) {
  output.writeStructBegin('ProductCategory');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.parentId !== null && this.parentId !== undefined) {
    output.writeFieldBegin('parentId', Thrift.Type.I64, 2);
    output.writeI64(this.parentId);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 3);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.descr !== null && this.descr !== undefined) {
    output.writeFieldBegin('descr', Thrift.Type.STRING, 4);
    output.writeString(this.descr);
    output.writeFieldEnd();
  }
  if (this.logoURLset !== null && this.logoURLset !== undefined) {
    output.writeFieldBegin('logoURLset', Thrift.Type.SET, 5);
    output.writeSetBegin(Thrift.Type.STRING, this.logoURLset.length);
    for (var iter30 in this.logoURLset)
    {
      if (this.logoURLset.hasOwnProperty(iter30))
      {
        iter30 = this.logoURLset[iter30];
        output.writeString(iter30);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.topicSet !== null && this.topicSet !== undefined) {
    output.writeFieldBegin('topicSet', Thrift.Type.SET, 6);
    output.writeSetBegin(Thrift.Type.I64, this.topicSet.length);
    for (var iter31 in this.topicSet)
    {
      if (this.topicSet.hasOwnProperty(iter31))
      {
        iter31 = this.topicSet[iter31];
        output.writeI64(iter31);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductDetails = function(args) {
  this.categories = null;
  this.fullDescr = null;
  this.imagesURLset = null;
  this.pricesMap = null;
  this.optionsMap = null;
  this.topicSet = null;
  this.producerId = null;
  if (args) {
    if (args.categories !== undefined) {
      this.categories = args.categories;
    }
    if (args.fullDescr !== undefined) {
      this.fullDescr = args.fullDescr;
    }
    if (args.imagesURLset !== undefined) {
      this.imagesURLset = args.imagesURLset;
    }
    if (args.pricesMap !== undefined) {
      this.pricesMap = args.pricesMap;
    }
    if (args.optionsMap !== undefined) {
      this.optionsMap = args.optionsMap;
    }
    if (args.topicSet !== undefined) {
      this.topicSet = args.topicSet;
    }
    if (args.producerId !== undefined) {
      this.producerId = args.producerId;
    }
  }
};
com.vmesteonline.be.shop.ProductDetails.prototype = {};
com.vmesteonline.be.shop.ProductDetails.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size32 = 0;
        var _rtmp336;
        this.categories = [];
        var _etype35 = 0;
        _rtmp336 = input.readSetBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = input.readI64().value;
          this.categories.push(elem38);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.fullDescr = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.SET) {
        var _size39 = 0;
        var _rtmp343;
        this.imagesURLset = [];
        var _etype42 = 0;
        _rtmp343 = input.readSetBegin();
        _etype42 = _rtmp343.etype;
        _size39 = _rtmp343.size;
        for (var _i44 = 0; _i44 < _size39; ++_i44)
        {
          var elem45 = null;
          elem45 = input.readString().value;
          this.imagesURLset.push(elem45);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.MAP) {
        var _size46 = 0;
        var _rtmp350;
        this.pricesMap = {};
        var _ktype47 = 0;
        var _vtype48 = 0;
        _rtmp350 = input.readMapBegin();
        _ktype47 = _rtmp350.ktype;
        _vtype48 = _rtmp350.vtype;
        _size46 = _rtmp350.size;
        for (var _i51 = 0; _i51 < _size46; ++_i51)
        {
          if (_i51 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key52 = null;
          var val53 = null;
          key52 = input.readI32().value;
          val53 = input.readDouble().value;
          this.pricesMap[key52] = val53;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.MAP) {
        var _size54 = 0;
        var _rtmp358;
        this.optionsMap = {};
        var _ktype55 = 0;
        var _vtype56 = 0;
        _rtmp358 = input.readMapBegin();
        _ktype55 = _rtmp358.ktype;
        _vtype56 = _rtmp358.vtype;
        _size54 = _rtmp358.size;
        for (var _i59 = 0; _i59 < _size54; ++_i59)
        {
          if (_i59 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key60 = null;
          var val61 = null;
          key60 = input.readString().value;
          val61 = input.readString().value;
          this.optionsMap[key60] = val61;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.SET) {
        var _size62 = 0;
        var _rtmp366;
        this.topicSet = [];
        var _etype65 = 0;
        _rtmp366 = input.readSetBegin();
        _etype65 = _rtmp366.etype;
        _size62 = _rtmp366.size;
        for (var _i67 = 0; _i67 < _size62; ++_i67)
        {
          var elem68 = null;
          elem68 = input.readI64().value;
          this.topicSet.push(elem68);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I64) {
        this.producerId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductDetails.prototype.write = function(output) {
  output.writeStructBegin('ProductDetails');
  if (this.categories !== null && this.categories !== undefined) {
    output.writeFieldBegin('categories', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.I64, this.categories.length);
    for (var iter69 in this.categories)
    {
      if (this.categories.hasOwnProperty(iter69))
      {
        iter69 = this.categories[iter69];
        output.writeI64(iter69);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.fullDescr !== null && this.fullDescr !== undefined) {
    output.writeFieldBegin('fullDescr', Thrift.Type.STRING, 2);
    output.writeString(this.fullDescr);
    output.writeFieldEnd();
  }
  if (this.imagesURLset !== null && this.imagesURLset !== undefined) {
    output.writeFieldBegin('imagesURLset', Thrift.Type.SET, 3);
    output.writeSetBegin(Thrift.Type.STRING, this.imagesURLset.length);
    for (var iter70 in this.imagesURLset)
    {
      if (this.imagesURLset.hasOwnProperty(iter70))
      {
        iter70 = this.imagesURLset[iter70];
        output.writeString(iter70);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.pricesMap !== null && this.pricesMap !== undefined) {
    output.writeFieldBegin('pricesMap', Thrift.Type.MAP, 4);
    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.DOUBLE, Thrift.objectLength(this.pricesMap));
    for (var kiter71 in this.pricesMap)
    {
      if (this.pricesMap.hasOwnProperty(kiter71))
      {
        var viter72 = this.pricesMap[kiter71];
        output.writeI32(kiter71);
        output.writeDouble(viter72);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.optionsMap !== null && this.optionsMap !== undefined) {
    output.writeFieldBegin('optionsMap', Thrift.Type.MAP, 5);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.optionsMap));
    for (var kiter73 in this.optionsMap)
    {
      if (this.optionsMap.hasOwnProperty(kiter73))
      {
        var viter74 = this.optionsMap[kiter73];
        output.writeString(kiter73);
        output.writeString(viter74);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.topicSet !== null && this.topicSet !== undefined) {
    output.writeFieldBegin('topicSet', Thrift.Type.SET, 6);
    output.writeSetBegin(Thrift.Type.I64, this.topicSet.length);
    for (var iter75 in this.topicSet)
    {
      if (this.topicSet.hasOwnProperty(iter75))
      {
        iter75 = this.topicSet[iter75];
        output.writeI64(iter75);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.producerId !== null && this.producerId !== undefined) {
    output.writeFieldBegin('producerId', Thrift.Type.I64, 7);
    output.writeI64(this.producerId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.Product = function(args) {
  this.id = null;
  this.name = null;
  this.shortDescr = null;
  this.weight = null;
  this.imageURL = null;
  this.price = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.shortDescr !== undefined) {
      this.shortDescr = args.shortDescr;
    }
    if (args.weight !== undefined) {
      this.weight = args.weight;
    }
    if (args.imageURL !== undefined) {
      this.imageURL = args.imageURL;
    }
    if (args.price !== undefined) {
      this.price = args.price;
    }
  }
};
com.vmesteonline.be.shop.Product.prototype = {};
com.vmesteonline.be.shop.Product.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.shortDescr = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.DOUBLE) {
        this.weight = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.imageURL = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.DOUBLE) {
        this.price = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.Product.prototype.write = function(output) {
  output.writeStructBegin('Product');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.shortDescr !== null && this.shortDescr !== undefined) {
    output.writeFieldBegin('shortDescr', Thrift.Type.STRING, 3);
    output.writeString(this.shortDescr);
    output.writeFieldEnd();
  }
  if (this.weight !== null && this.weight !== undefined) {
    output.writeFieldBegin('weight', Thrift.Type.DOUBLE, 4);
    output.writeDouble(this.weight);
    output.writeFieldEnd();
  }
  if (this.imageURL !== null && this.imageURL !== undefined) {
    output.writeFieldBegin('imageURL', Thrift.Type.STRING, 5);
    output.writeString(this.imageURL);
    output.writeFieldEnd();
  }
  if (this.price !== null && this.price !== undefined) {
    output.writeFieldBegin('price', Thrift.Type.DOUBLE, 6);
    output.writeDouble(this.price);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.FullProductInto = function(args) {
  this.product = null;
  this.details = null;
  if (args) {
    if (args.product !== undefined) {
      this.product = args.product;
    }
    if (args.details !== undefined) {
      this.details = args.details;
    }
  }
};
com.vmesteonline.be.shop.FullProductInto.prototype = {};
com.vmesteonline.be.shop.FullProductInto.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.product = new com.vmesteonline.be.shop.Product();
        this.product.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.details = new com.vmesteonline.be.shop.ProductDetails();
        this.details.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.FullProductInto.prototype.write = function(output) {
  output.writeStructBegin('FullProductInto');
  if (this.product !== null && this.product !== undefined) {
    output.writeFieldBegin('product', Thrift.Type.STRUCT, 1);
    this.product.write(output);
    output.writeFieldEnd();
  }
  if (this.details !== null && this.details !== undefined) {
    output.writeFieldBegin('details', Thrift.Type.STRUCT, 2);
    this.details.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.OrderLine = function(args) {
  this.product = null;
  this.quontity = null;
  this.priceType = null;
  this.price = null;
  if (args) {
    if (args.product !== undefined) {
      this.product = args.product;
    }
    if (args.quontity !== undefined) {
      this.quontity = args.quontity;
    }
    if (args.priceType !== undefined) {
      this.priceType = args.priceType;
    }
    if (args.price !== undefined) {
      this.price = args.price;
    }
  }
};
com.vmesteonline.be.shop.OrderLine.prototype = {};
com.vmesteonline.be.shop.OrderLine.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.product = new com.vmesteonline.be.shop.Product();
        this.product.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.DOUBLE) {
        this.quontity = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.priceType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.DOUBLE) {
        this.price = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.OrderLine.prototype.write = function(output) {
  output.writeStructBegin('OrderLine');
  if (this.product !== null && this.product !== undefined) {
    output.writeFieldBegin('product', Thrift.Type.STRUCT, 1);
    this.product.write(output);
    output.writeFieldEnd();
  }
  if (this.quontity !== null && this.quontity !== undefined) {
    output.writeFieldBegin('quontity', Thrift.Type.DOUBLE, 2);
    output.writeDouble(this.quontity);
    output.writeFieldEnd();
  }
  if (this.priceType !== null && this.priceType !== undefined) {
    output.writeFieldBegin('priceType', Thrift.Type.I32, 3);
    output.writeI32(this.priceType);
    output.writeFieldEnd();
  }
  if (this.price !== null && this.price !== undefined) {
    output.writeFieldBegin('price', Thrift.Type.DOUBLE, 4);
    output.writeDouble(this.price);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.OrderDetails = function(args) {
  this.createdAt = null;
  this.delivery = null;
  this.deliveryCost = null;
  this.deliveryTo = null;
  this.paymentType = null;
  this.paymentStatus = null;
  this.odrerLines = null;
  this.comment = null;
  if (args) {
    if (args.createdAt !== undefined) {
      this.createdAt = args.createdAt;
    }
    if (args.delivery !== undefined) {
      this.delivery = args.delivery;
    }
    if (args.deliveryCost !== undefined) {
      this.deliveryCost = args.deliveryCost;
    }
    if (args.deliveryTo !== undefined) {
      this.deliveryTo = args.deliveryTo;
    }
    if (args.paymentType !== undefined) {
      this.paymentType = args.paymentType;
    }
    if (args.paymentStatus !== undefined) {
      this.paymentStatus = args.paymentStatus;
    }
    if (args.odrerLines !== undefined) {
      this.odrerLines = args.odrerLines;
    }
    if (args.comment !== undefined) {
      this.comment = args.comment;
    }
  }
};
com.vmesteonline.be.shop.OrderDetails.prototype = {};
com.vmesteonline.be.shop.OrderDetails.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.createdAt = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.delivery = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.DOUBLE) {
        this.deliveryCost = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.deliveryTo = new com.vmesteonline.be.PostalAddress();
        this.deliveryTo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.paymentType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.paymentStatus = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.LIST) {
        var _size76 = 0;
        var _rtmp380;
        this.odrerLines = [];
        var _etype79 = 0;
        _rtmp380 = input.readListBegin();
        _etype79 = _rtmp380.etype;
        _size76 = _rtmp380.size;
        for (var _i81 = 0; _i81 < _size76; ++_i81)
        {
          var elem82 = null;
          elem82 = new com.vmesteonline.be.shop.OrderLine();
          elem82.read(input);
          this.odrerLines.push(elem82);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.comment = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.OrderDetails.prototype.write = function(output) {
  output.writeStructBegin('OrderDetails');
  if (this.createdAt !== null && this.createdAt !== undefined) {
    output.writeFieldBegin('createdAt', Thrift.Type.I32, 1);
    output.writeI32(this.createdAt);
    output.writeFieldEnd();
  }
  if (this.delivery !== null && this.delivery !== undefined) {
    output.writeFieldBegin('delivery', Thrift.Type.I32, 2);
    output.writeI32(this.delivery);
    output.writeFieldEnd();
  }
  if (this.deliveryCost !== null && this.deliveryCost !== undefined) {
    output.writeFieldBegin('deliveryCost', Thrift.Type.DOUBLE, 3);
    output.writeDouble(this.deliveryCost);
    output.writeFieldEnd();
  }
  if (this.deliveryTo !== null && this.deliveryTo !== undefined) {
    output.writeFieldBegin('deliveryTo', Thrift.Type.STRUCT, 4);
    this.deliveryTo.write(output);
    output.writeFieldEnd();
  }
  if (this.paymentType !== null && this.paymentType !== undefined) {
    output.writeFieldBegin('paymentType', Thrift.Type.I32, 5);
    output.writeI32(this.paymentType);
    output.writeFieldEnd();
  }
  if (this.paymentStatus !== null && this.paymentStatus !== undefined) {
    output.writeFieldBegin('paymentStatus', Thrift.Type.I32, 6);
    output.writeI32(this.paymentStatus);
    output.writeFieldEnd();
  }
  if (this.odrerLines !== null && this.odrerLines !== undefined) {
    output.writeFieldBegin('odrerLines', Thrift.Type.LIST, 7);
    output.writeListBegin(Thrift.Type.STRUCT, this.odrerLines.length);
    for (var iter83 in this.odrerLines)
    {
      if (this.odrerLines.hasOwnProperty(iter83))
      {
        iter83 = this.odrerLines[iter83];
        iter83.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.comment !== null && this.comment !== undefined) {
    output.writeFieldBegin('comment', Thrift.Type.STRING, 8);
    output.writeString(this.comment);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.Order = function(args) {
  this.id = null;
  this.date = null;
  this.status = null;
  this.totalCost = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.date !== undefined) {
      this.date = args.date;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.totalCost !== undefined) {
      this.totalCost = args.totalCost;
    }
  }
};
com.vmesteonline.be.shop.Order.prototype = {};
com.vmesteonline.be.shop.Order.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.date = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.DOUBLE) {
        this.totalCost = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.Order.prototype.write = function(output) {
  output.writeStructBegin('Order');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.date !== null && this.date !== undefined) {
    output.writeFieldBegin('date', Thrift.Type.I32, 2);
    output.writeI32(this.date);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 3);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.totalCost !== null && this.totalCost !== undefined) {
    output.writeFieldBegin('totalCost', Thrift.Type.DOUBLE, 4);
    output.writeDouble(this.totalCost);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductListPart = function(args) {
  this.products = null;
  this.length = null;
  if (args) {
    if (args.products !== undefined) {
      this.products = args.products;
    }
    if (args.length !== undefined) {
      this.length = args.length;
    }
  }
};
com.vmesteonline.be.shop.ProductListPart.prototype = {};
com.vmesteonline.be.shop.ProductListPart.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size84 = 0;
        var _rtmp388;
        this.products = [];
        var _etype87 = 0;
        _rtmp388 = input.readListBegin();
        _etype87 = _rtmp388.etype;
        _size84 = _rtmp388.size;
        for (var _i89 = 0; _i89 < _size84; ++_i89)
        {
          var elem90 = null;
          elem90 = new com.vmesteonline.be.shop.Product();
          elem90.read(input);
          this.products.push(elem90);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.length = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ProductListPart.prototype.write = function(output) {
  output.writeStructBegin('ProductListPart');
  if (this.products !== null && this.products !== undefined) {
    output.writeFieldBegin('products', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.products.length);
    for (var iter91 in this.products)
    {
      if (this.products.hasOwnProperty(iter91))
      {
        iter91 = this.products[iter91];
        iter91.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.length !== null && this.length !== undefined) {
    output.writeFieldBegin('length', Thrift.Type.I32, 2);
    output.writeI32(this.length);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

