//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

com.vmesteonline.be.shop.ShopService_registerShop_args = function(args) {
  this.shop = null;
  if (args) {
    if (args.shop !== undefined) {
      this.shop = args.shop;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerShop_args.prototype = {};
com.vmesteonline.be.shop.ShopService_registerShop_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.shop = new com.vmesteonline.be.shop.Shop();
        this.shop.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerShop_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerShop_args');
  if (this.shop !== null && this.shop !== undefined) {
    output.writeFieldBegin('shop', Thrift.Type.STRUCT, 1);
    this.shop.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerShop_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerShop_result.prototype = {};
com.vmesteonline.be.shop.ShopService_registerShop_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerShop_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerShop_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProductCategory_args = function(args) {
  this.productCategory = null;
  this.shopId = null;
  if (args) {
    if (args.productCategory !== undefined) {
      this.productCategory = args.productCategory;
    }
    if (args.shopId !== undefined) {
      this.shopId = args.shopId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerProductCategory_args.prototype = {};
com.vmesteonline.be.shop.ShopService_registerProductCategory_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.productCategory = new com.vmesteonline.be.shop.ProductCategory();
        this.productCategory.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.shopId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProductCategory_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerProductCategory_args');
  if (this.productCategory !== null && this.productCategory !== undefined) {
    output.writeFieldBegin('productCategory', Thrift.Type.STRUCT, 1);
    this.productCategory.write(output);
    output.writeFieldEnd();
  }
  if (this.shopId !== null && this.shopId !== undefined) {
    output.writeFieldBegin('shopId', Thrift.Type.I64, 2);
    output.writeI64(this.shopId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProductCategory_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerProductCategory_result.prototype = {};
com.vmesteonline.be.shop.ShopService_registerProductCategory_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProductCategory_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerProductCategory_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProducer_args = function(args) {
  this.producer = null;
  this.shopId = null;
  if (args) {
    if (args.producer !== undefined) {
      this.producer = args.producer;
    }
    if (args.shopId !== undefined) {
      this.shopId = args.shopId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerProducer_args.prototype = {};
com.vmesteonline.be.shop.ShopService_registerProducer_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.producer = new com.vmesteonline.be.shop.Producer();
        this.producer.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.shopId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProducer_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerProducer_args');
  if (this.producer !== null && this.producer !== undefined) {
    output.writeFieldBegin('producer', Thrift.Type.STRUCT, 1);
    this.producer.write(output);
    output.writeFieldEnd();
  }
  if (this.shopId !== null && this.shopId !== undefined) {
    output.writeFieldBegin('shopId', Thrift.Type.I64, 2);
    output.writeI64(this.shopId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProducer_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_registerProducer_result.prototype = {};
com.vmesteonline.be.shop.ShopService_registerProducer_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_registerProducer_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_registerProducer_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProducts_args = function(args) {
  this.products = null;
  this.shopId = null;
  if (args) {
    if (args.products !== undefined) {
      this.products = args.products;
    }
    if (args.shopId !== undefined) {
      this.shopId = args.shopId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_uploadProducts_args.prototype = {};
com.vmesteonline.be.shop.ShopService_uploadProducts_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size92 = 0;
        var _rtmp396;
        this.products = [];
        var _etype95 = 0;
        _rtmp396 = input.readListBegin();
        _etype95 = _rtmp396.etype;
        _size92 = _rtmp396.size;
        for (var _i97 = 0; _i97 < _size92; ++_i97)
        {
          var elem98 = null;
          elem98 = new com.vmesteonline.be.shop.FullProductInto();
          elem98.read(input);
          this.products.push(elem98);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.shopId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProducts_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_uploadProducts_args');
  if (this.products !== null && this.products !== undefined) {
    output.writeFieldBegin('products', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.products.length);
    for (var iter99 in this.products)
    {
      if (this.products.hasOwnProperty(iter99))
      {
        iter99 = this.products[iter99];
        iter99.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.shopId !== null && this.shopId !== undefined) {
    output.writeFieldBegin('shopId', Thrift.Type.I64, 2);
    output.writeI64(this.shopId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProducts_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_uploadProducts_result.prototype = {};
com.vmesteonline.be.shop.ShopService_uploadProducts_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.SET) {
        var _size100 = 0;
        var _rtmp3104;
        this.success = [];
        var _etype103 = 0;
        _rtmp3104 = input.readSetBegin();
        _etype103 = _rtmp3104.etype;
        _size100 = _rtmp3104.size;
        for (var _i105 = 0; _i105 < _size100; ++_i105)
        {
          var elem106 = null;
          elem106 = input.readI64().value;
          this.success.push(elem106);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProducts_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_uploadProducts_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.SET, 0);
    output.writeSetBegin(Thrift.Type.I64, this.success.length);
    for (var iter107 in this.success)
    {
      if (this.success.hasOwnProperty(iter107))
      {
        iter107 = this.success[iter107];
        output.writeI64(iter107);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProductCategoies_args = function(args) {
  this.categories = null;
  this.relativeIds = null;
  this.rewriteAll = null;
  if (args) {
    if (args.categories !== undefined) {
      this.categories = args.categories;
    }
    if (args.relativeIds !== undefined) {
      this.relativeIds = args.relativeIds;
    }
    if (args.rewriteAll !== undefined) {
      this.rewriteAll = args.rewriteAll;
    }
  }
};
com.vmesteonline.be.shop.ShopService_uploadProductCategoies_args.prototype = {};
com.vmesteonline.be.shop.ShopService_uploadProductCategoies_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size108 = 0;
        var _rtmp3112;
        this.categories = [];
        var _etype111 = 0;
        _rtmp3112 = input.readSetBegin();
        _etype111 = _rtmp3112.etype;
        _size108 = _rtmp3112.size;
        for (var _i113 = 0; _i113 < _size108; ++_i113)
        {
          var elem114 = null;
          elem114 = new com.vmesteonline.be.shop.ProductCategory();
          elem114.read(input);
          this.categories.push(elem114);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.relativeIds = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.rewriteAll = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProductCategoies_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_uploadProductCategoies_args');
  if (this.categories !== null && this.categories !== undefined) {
    output.writeFieldBegin('categories', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.STRUCT, this.categories.length);
    for (var iter115 in this.categories)
    {
      if (this.categories.hasOwnProperty(iter115))
      {
        iter115 = this.categories[iter115];
        iter115.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.relativeIds !== null && this.relativeIds !== undefined) {
    output.writeFieldBegin('relativeIds', Thrift.Type.BOOL, 2);
    output.writeBool(this.relativeIds);
    output.writeFieldEnd();
  }
  if (this.rewriteAll !== null && this.rewriteAll !== undefined) {
    output.writeFieldBegin('rewriteAll', Thrift.Type.BOOL, 3);
    output.writeBool(this.rewriteAll);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProductCategoies_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
com.vmesteonline.be.shop.ShopService_uploadProductCategoies_result.prototype = {};
com.vmesteonline.be.shop.ShopService_uploadProductCategoies_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.SET) {
        var _size116 = 0;
        var _rtmp3120;
        this.success = [];
        var _etype119 = 0;
        _rtmp3120 = input.readSetBegin();
        _etype119 = _rtmp3120.etype;
        _size116 = _rtmp3120.size;
        for (var _i121 = 0; _i121 < _size116; ++_i121)
        {
          var elem122 = null;
          elem122 = new com.vmesteonline.be.shop.ProductCategory();
          elem122.read(input);
          this.success.push(elem122);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_uploadProductCategoies_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_uploadProductCategoies_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.SET, 0);
    output.writeSetBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter123 in this.success)
    {
      if (this.success.hasOwnProperty(iter123))
      {
        iter123 = this.success[iter123];
        iter123.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShops_args = function(args) {
};
com.vmesteonline.be.shop.ShopService_getShops_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getShops_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShops_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getShops_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShops_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getShops_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getShops_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size124 = 0;
        var _rtmp3128;
        this.success = [];
        var _etype127 = 0;
        _rtmp3128 = input.readListBegin();
        _etype127 = _rtmp3128.etype;
        _size124 = _rtmp3128.size;
        for (var _i129 = 0; _i129 < _size124; ++_i129)
        {
          var elem130 = null;
          elem130 = new com.vmesteonline.be.shop.Shop();
          elem130.read(input);
          this.success.push(elem130);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShops_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getShops_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter131 in this.success)
    {
      if (this.success.hasOwnProperty(iter131))
      {
        iter131 = this.success[iter131];
        iter131.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShop_args = function(args) {
  this.shopId = null;
  if (args) {
    if (args.shopId !== undefined) {
      this.shopId = args.shopId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getShop_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getShop_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.shopId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShop_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getShop_args');
  if (this.shopId !== null && this.shopId !== undefined) {
    output.writeFieldBegin('shopId', Thrift.Type.I64, 1);
    output.writeI64(this.shopId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShop_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getShop_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getShop_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.Shop();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getShop_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getShop_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducers_args = function(args) {
};
com.vmesteonline.be.shop.ShopService_getProducers_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getProducers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducers_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProducers_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducers_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProducers_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getProducers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size132 = 0;
        var _rtmp3136;
        this.success = [];
        var _etype135 = 0;
        _rtmp3136 = input.readListBegin();
        _etype135 = _rtmp3136.etype;
        _size132 = _rtmp3136.size;
        for (var _i137 = 0; _i137 < _size132; ++_i137)
        {
          var elem138 = null;
          elem138 = new com.vmesteonline.be.shop.Producer();
          elem138.read(input);
          this.success.push(elem138);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducers_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProducers_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter139 in this.success)
    {
      if (this.success.hasOwnProperty(iter139))
      {
        iter139 = this.success[iter139];
        iter139.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductCategories_args = function(args) {
  this.currentProductCategoryId = null;
  if (args) {
    if (args.currentProductCategoryId !== undefined) {
      this.currentProductCategoryId = args.currentProductCategoryId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProductCategories_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getProductCategories_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.currentProductCategoryId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductCategories_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProductCategories_args');
  if (this.currentProductCategoryId !== null && this.currentProductCategoryId !== undefined) {
    output.writeFieldBegin('currentProductCategoryId', Thrift.Type.I64, 1);
    output.writeI64(this.currentProductCategoryId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductCategories_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProductCategories_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getProductCategories_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size140 = 0;
        var _rtmp3144;
        this.success = [];
        var _etype143 = 0;
        _rtmp3144 = input.readListBegin();
        _etype143 = _rtmp3144.etype;
        _size140 = _rtmp3144.size;
        for (var _i145 = 0; _i145 < _size140; ++_i145)
        {
          var elem146 = null;
          elem146 = new com.vmesteonline.be.shop.ProductCategory();
          elem146.read(input);
          this.success.push(elem146);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductCategories_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProductCategories_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter147 in this.success)
    {
      if (this.success.hasOwnProperty(iter147))
      {
        iter147 = this.success[iter147];
        iter147.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducts_args = function(args) {
  this.offset = null;
  this.length = null;
  this.categoryId = null;
  if (args) {
    if (args.offset !== undefined) {
      this.offset = args.offset;
    }
    if (args.length !== undefined) {
      this.length = args.length;
    }
    if (args.categoryId !== undefined) {
      this.categoryId = args.categoryId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProducts_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getProducts_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.offset = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.length = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.categoryId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducts_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProducts_args');
  if (this.offset !== null && this.offset !== undefined) {
    output.writeFieldBegin('offset', Thrift.Type.I32, 1);
    output.writeI32(this.offset);
    output.writeFieldEnd();
  }
  if (this.length !== null && this.length !== undefined) {
    output.writeFieldBegin('length', Thrift.Type.I32, 2);
    output.writeI32(this.length);
    output.writeFieldEnd();
  }
  if (this.categoryId !== null && this.categoryId !== undefined) {
    output.writeFieldBegin('categoryId', Thrift.Type.I64, 3);
    output.writeI64(this.categoryId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducts_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProducts_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getProducts_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.ProductListPart();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProducts_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProducts_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductDetails_args = function(args) {
  this.productId = null;
  if (args) {
    if (args.productId !== undefined) {
      this.productId = args.productId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProductDetails_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getProductDetails_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.productId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductDetails_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProductDetails_args');
  if (this.productId !== null && this.productId !== undefined) {
    output.writeFieldBegin('productId', Thrift.Type.I64, 1);
    output.writeI64(this.productId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductDetails_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getProductDetails_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getProductDetails_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.ProductDetails();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getProductDetails_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getProductDetails_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrders_args = function(args) {
  this.dateFrom = null;
  this.dateTo = null;
  if (args) {
    if (args.dateFrom !== undefined) {
      this.dateFrom = args.dateFrom;
    }
    if (args.dateTo !== undefined) {
      this.dateTo = args.dateTo;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getOrders_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getOrders_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.dateFrom = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.dateTo = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrders_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getOrders_args');
  if (this.dateFrom !== null && this.dateFrom !== undefined) {
    output.writeFieldBegin('dateFrom', Thrift.Type.I32, 1);
    output.writeI32(this.dateFrom);
    output.writeFieldEnd();
  }
  if (this.dateTo !== null && this.dateTo !== undefined) {
    output.writeFieldBegin('dateTo', Thrift.Type.I32, 2);
    output.writeI32(this.dateTo);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrders_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getOrders_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getOrders_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size148 = 0;
        var _rtmp3152;
        this.success = [];
        var _etype151 = 0;
        _rtmp3152 = input.readListBegin();
        _etype151 = _rtmp3152.etype;
        _size148 = _rtmp3152.size;
        for (var _i153 = 0; _i153 < _size148; ++_i153)
        {
          var elem154 = null;
          elem154 = new com.vmesteonline.be.shop.Order();
          elem154.read(input);
          this.success.push(elem154);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrders_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getOrders_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter155 in this.success)
    {
      if (this.success.hasOwnProperty(iter155))
      {
        iter155 = this.success[iter155];
        iter155.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrderDetails_args = function(args) {
  this.orderId = null;
  if (args) {
    if (args.orderId !== undefined) {
      this.orderId = args.orderId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getOrderDetails_args.prototype = {};
com.vmesteonline.be.shop.ShopService_getOrderDetails_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.orderId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrderDetails_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getOrderDetails_args');
  if (this.orderId !== null && this.orderId !== undefined) {
    output.writeFieldBegin('orderId', Thrift.Type.I64, 1);
    output.writeI64(this.orderId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrderDetails_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_getOrderDetails_result.prototype = {};
com.vmesteonline.be.shop.ShopService_getOrderDetails_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.OrderDetails();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_getOrderDetails_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_getOrderDetails_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_createOrder_args = function(args) {
};
com.vmesteonline.be.shop.ShopService_createOrder_args.prototype = {};
com.vmesteonline.be.shop.ShopService_createOrder_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_createOrder_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_createOrder_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_createOrder_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_createOrder_result.prototype = {};
com.vmesteonline.be.shop.ShopService_createOrder_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_createOrder_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_createOrder_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_cancelOrder_args = function(args) {
};
com.vmesteonline.be.shop.ShopService_cancelOrder_args.prototype = {};
com.vmesteonline.be.shop.ShopService_cancelOrder_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_cancelOrder_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_cancelOrder_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_cancelOrder_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_cancelOrder_result.prototype = {};
com.vmesteonline.be.shop.ShopService_cancelOrder_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_cancelOrder_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_cancelOrder_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_confirmOrder_args = function(args) {
};
com.vmesteonline.be.shop.ShopService_confirmOrder_args.prototype = {};
com.vmesteonline.be.shop.ShopService_confirmOrder_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_confirmOrder_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_confirmOrder_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_confirmOrder_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_confirmOrder_result.prototype = {};
com.vmesteonline.be.shop.ShopService_confirmOrder_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_confirmOrder_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_confirmOrder_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_addOrderLine_args = function(args) {
  this.productId = null;
  this.quontity = null;
  this.priceType = null;
  if (args) {
    if (args.productId !== undefined) {
      this.productId = args.productId;
    }
    if (args.quontity !== undefined) {
      this.quontity = args.quontity;
    }
    if (args.priceType !== undefined) {
      this.priceType = args.priceType;
    }
  }
};
com.vmesteonline.be.shop.ShopService_addOrderLine_args.prototype = {};
com.vmesteonline.be.shop.ShopService_addOrderLine_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.productId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.DOUBLE) {
        this.quontity = input.readDouble().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.priceType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_addOrderLine_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_addOrderLine_args');
  if (this.productId !== null && this.productId !== undefined) {
    output.writeFieldBegin('productId', Thrift.Type.I64, 1);
    output.writeI64(this.productId);
    output.writeFieldEnd();
  }
  if (this.quontity !== null && this.quontity !== undefined) {
    output.writeFieldBegin('quontity', Thrift.Type.DOUBLE, 2);
    output.writeDouble(this.quontity);
    output.writeFieldEnd();
  }
  if (this.priceType !== null && this.priceType !== undefined) {
    output.writeFieldBegin('priceType', Thrift.Type.I32, 3);
    output.writeI32(this.priceType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_addOrderLine_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_addOrderLine_result.prototype = {};
com.vmesteonline.be.shop.ShopService_addOrderLine_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.OrderLine();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_addOrderLine_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_addOrderLine_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_removeOrderLine_args = function(args) {
  this.productId = null;
  if (args) {
    if (args.productId !== undefined) {
      this.productId = args.productId;
    }
  }
};
com.vmesteonline.be.shop.ShopService_removeOrderLine_args.prototype = {};
com.vmesteonline.be.shop.ShopService_removeOrderLine_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.productId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_removeOrderLine_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_removeOrderLine_args');
  if (this.productId !== null && this.productId !== undefined) {
    output.writeFieldBegin('productId', Thrift.Type.I64, 1);
    output.writeI64(this.productId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_removeOrderLine_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_removeOrderLine_result.prototype = {};
com.vmesteonline.be.shop.ShopService_removeOrderLine_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_removeOrderLine_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_removeOrderLine_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_args = function(args) {
  this.deliveryType = null;
  if (args) {
    if (args.deliveryType !== undefined) {
      this.deliveryType = args.deliveryType;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_args.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.deliveryType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderDeliveryType_args');
  if (this.deliveryType !== null && this.deliveryType !== undefined) {
    output.writeFieldBegin('deliveryType', Thrift.Type.I32, 1);
    output.writeI32(this.deliveryType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_result.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.OrderDetails();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderDeliveryType_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderPaymentType_args = function(args) {
  this.paymentType = null;
  if (args) {
    if (args.paymentType !== undefined) {
      this.paymentType = args.paymentType;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderPaymentType_args.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderPaymentType_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.paymentType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderPaymentType_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderPaymentType_args');
  if (this.paymentType !== null && this.paymentType !== undefined) {
    output.writeFieldBegin('paymentType', Thrift.Type.I32, 1);
    output.writeI32(this.paymentType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderPaymentType_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderPaymentType_result.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderPaymentType_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderPaymentType_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderPaymentType_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_args = function(args) {
  this.deliveryAddress = null;
  if (args) {
    if (args.deliveryAddress !== undefined) {
      this.deliveryAddress = args.deliveryAddress;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_args.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.deliveryAddress = new com.vmesteonline.be.PostalAddress();
        this.deliveryAddress.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_args.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderDeliveryAddress_args');
  if (this.deliveryAddress !== null && this.deliveryAddress !== undefined) {
    output.writeFieldBegin('deliveryAddress', Thrift.Type.STRUCT, 1);
    this.deliveryAddress.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_result = function(args) {
  this.success = null;
  this.exc = null;
  if (args instanceof com.vmesteonline.be.InvalidOperation) {
    this.exc = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.exc !== undefined) {
      this.exc = args.exc;
    }
  }
};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_result.prototype = {};
com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new com.vmesteonline.be.shop.OrderDetails();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.exc = new com.vmesteonline.be.InvalidOperation();
        this.exc.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_result.prototype.write = function(output) {
  output.writeStructBegin('ShopService_setOrderDeliveryAddress_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.exc !== null && this.exc !== undefined) {
    output.writeFieldBegin('exc', Thrift.Type.STRUCT, 1);
    this.exc.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

com.vmesteonline.be.shop.ShopServiceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
com.vmesteonline.be.shop.ShopServiceClient.prototype = {};
com.vmesteonline.be.shop.ShopServiceClient.prototype.registerShop = function(shop) {
  this.send_registerShop(shop);
  return this.recv_registerShop();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_registerShop = function(shop) {
  this.output.writeMessageBegin('registerShop', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_registerShop_args();
  args.shop = shop;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_registerShop = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_registerShop_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'registerShop failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.registerProductCategory = function(productCategory, shopId) {
  this.send_registerProductCategory(productCategory, shopId);
  return this.recv_registerProductCategory();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_registerProductCategory = function(productCategory, shopId) {
  this.output.writeMessageBegin('registerProductCategory', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_registerProductCategory_args();
  args.productCategory = productCategory;
  args.shopId = shopId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_registerProductCategory = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_registerProductCategory_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'registerProductCategory failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.registerProducer = function(producer, shopId) {
  this.send_registerProducer(producer, shopId);
  return this.recv_registerProducer();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_registerProducer = function(producer, shopId) {
  this.output.writeMessageBegin('registerProducer', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_registerProducer_args();
  args.producer = producer;
  args.shopId = shopId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_registerProducer = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_registerProducer_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'registerProducer failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.uploadProducts = function(products, shopId) {
  this.send_uploadProducts(products, shopId);
  return this.recv_uploadProducts();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_uploadProducts = function(products, shopId) {
  this.output.writeMessageBegin('uploadProducts', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_uploadProducts_args();
  args.products = products;
  args.shopId = shopId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_uploadProducts = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_uploadProducts_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'uploadProducts failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.uploadProductCategoies = function(categories, relativeIds, rewriteAll) {
  this.send_uploadProductCategoies(categories, relativeIds, rewriteAll);
  return this.recv_uploadProductCategoies();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_uploadProductCategoies = function(categories, relativeIds, rewriteAll) {
  this.output.writeMessageBegin('uploadProductCategoies', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_uploadProductCategoies_args();
  args.categories = categories;
  args.relativeIds = relativeIds;
  args.rewriteAll = rewriteAll;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_uploadProductCategoies = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_uploadProductCategoies_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'uploadProductCategoies failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getShops = function() {
  this.send_getShops();
  return this.recv_getShops();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getShops = function() {
  this.output.writeMessageBegin('getShops', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getShops_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getShops = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getShops_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getShops failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getShop = function(shopId) {
  this.send_getShop(shopId);
  return this.recv_getShop();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getShop = function(shopId) {
  this.output.writeMessageBegin('getShop', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getShop_args();
  args.shopId = shopId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getShop = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getShop_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getShop failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getProducers = function() {
  this.send_getProducers();
  return this.recv_getProducers();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getProducers = function() {
  this.output.writeMessageBegin('getProducers', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getProducers_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getProducers = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getProducers_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getProducers failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getProductCategories = function(currentProductCategoryId) {
  this.send_getProductCategories(currentProductCategoryId);
  return this.recv_getProductCategories();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getProductCategories = function(currentProductCategoryId) {
  this.output.writeMessageBegin('getProductCategories', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getProductCategories_args();
  args.currentProductCategoryId = currentProductCategoryId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getProductCategories = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getProductCategories_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getProductCategories failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getProducts = function(offset, length, categoryId) {
  this.send_getProducts(offset, length, categoryId);
  return this.recv_getProducts();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getProducts = function(offset, length, categoryId) {
  this.output.writeMessageBegin('getProducts', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getProducts_args();
  args.offset = offset;
  args.length = length;
  args.categoryId = categoryId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getProducts = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getProducts_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getProducts failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getProductDetails = function(productId) {
  this.send_getProductDetails(productId);
  return this.recv_getProductDetails();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getProductDetails = function(productId) {
  this.output.writeMessageBegin('getProductDetails', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getProductDetails_args();
  args.productId = productId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getProductDetails = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getProductDetails_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getProductDetails failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getOrders = function(dateFrom, dateTo) {
  this.send_getOrders(dateFrom, dateTo);
  return this.recv_getOrders();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getOrders = function(dateFrom, dateTo) {
  this.output.writeMessageBegin('getOrders', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getOrders_args();
  args.dateFrom = dateFrom;
  args.dateTo = dateTo;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getOrders = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getOrders_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getOrders failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.getOrderDetails = function(orderId) {
  this.send_getOrderDetails(orderId);
  return this.recv_getOrderDetails();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_getOrderDetails = function(orderId) {
  this.output.writeMessageBegin('getOrderDetails', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_getOrderDetails_args();
  args.orderId = orderId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_getOrderDetails = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_getOrderDetails_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'getOrderDetails failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.createOrder = function() {
  this.send_createOrder();
  return this.recv_createOrder();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_createOrder = function() {
  this.output.writeMessageBegin('createOrder', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_createOrder_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_createOrder = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_createOrder_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'createOrder failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.cancelOrder = function() {
  this.send_cancelOrder();
  return this.recv_cancelOrder();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_cancelOrder = function() {
  this.output.writeMessageBegin('cancelOrder', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_cancelOrder_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_cancelOrder = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_cancelOrder_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'cancelOrder failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.confirmOrder = function() {
  this.send_confirmOrder();
  return this.recv_confirmOrder();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_confirmOrder = function() {
  this.output.writeMessageBegin('confirmOrder', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_confirmOrder_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_confirmOrder = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_confirmOrder_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'confirmOrder failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.addOrderLine = function(productId, quontity, priceType) {
  this.send_addOrderLine(productId, quontity, priceType);
  return this.recv_addOrderLine();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_addOrderLine = function(productId, quontity, priceType) {
  this.output.writeMessageBegin('addOrderLine', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_addOrderLine_args();
  args.productId = productId;
  args.quontity = quontity;
  args.priceType = priceType;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_addOrderLine = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_addOrderLine_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addOrderLine failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.removeOrderLine = function(productId) {
  this.send_removeOrderLine(productId);
  return this.recv_removeOrderLine();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_removeOrderLine = function(productId) {
  this.output.writeMessageBegin('removeOrderLine', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_removeOrderLine_args();
  args.productId = productId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_removeOrderLine = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_removeOrderLine_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'removeOrderLine failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.setOrderDeliveryType = function(deliveryType) {
  this.send_setOrderDeliveryType(deliveryType);
  return this.recv_setOrderDeliveryType();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_setOrderDeliveryType = function(deliveryType) {
  this.output.writeMessageBegin('setOrderDeliveryType', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_args();
  args.deliveryType = deliveryType;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_setOrderDeliveryType = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_setOrderDeliveryType_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'setOrderDeliveryType failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.setOrderPaymentType = function(paymentType) {
  this.send_setOrderPaymentType(paymentType);
  return this.recv_setOrderPaymentType();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_setOrderPaymentType = function(paymentType) {
  this.output.writeMessageBegin('setOrderPaymentType', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_setOrderPaymentType_args();
  args.paymentType = paymentType;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_setOrderPaymentType = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_setOrderPaymentType_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'setOrderPaymentType failed: unknown result';
};
com.vmesteonline.be.shop.ShopServiceClient.prototype.setOrderDeliveryAddress = function(deliveryAddress) {
  this.send_setOrderDeliveryAddress(deliveryAddress);
  return this.recv_setOrderDeliveryAddress();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.send_setOrderDeliveryAddress = function(deliveryAddress) {
  this.output.writeMessageBegin('setOrderDeliveryAddress', Thrift.MessageType.CALL, this.seqid);
  var args = new com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_args();
  args.deliveryAddress = deliveryAddress;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

com.vmesteonline.be.shop.ShopServiceClient.prototype.recv_setOrderDeliveryAddress = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new com.vmesteonline.be.shop.ShopService_setOrderDeliveryAddress_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.exc) {
    throw result.exc;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'setOrderDeliveryAddress failed: unknown result';
};
