/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.vmesteonline.be.shop;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Shop implements org.apache.thrift.TBase<Shop, Shop._Fields>, java.io.Serializable, Cloneable, Comparable<Shop> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Shop");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCR_FIELD_DESC = new org.apache.thrift.protocol.TField("descr", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField LOGO_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("logoURL", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OWNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ownerId", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField TOPIC_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("topicSet", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField TAGS_FIELD_DESC = new org.apache.thrift.protocol.TField("tags", org.apache.thrift.protocol.TType.SET, (short)8);
  private static final org.apache.thrift.protocol.TField DELIVERY_COSTS_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCosts", org.apache.thrift.protocol.TType.MAP, (short)9);
  private static final org.apache.thrift.protocol.TField PAYMENT_TYPES_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTypes", org.apache.thrift.protocol.TType.MAP, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ShopStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ShopTupleSchemeFactory());
  }

  public long id; // required
  public String name; // required
  public String descr; // required
  public com.vmesteonline.be.PostalAddress address; // required
  public String logoURL; // required
  public long ownerId; // required
  public Set<Long> topicSet; // required
  public Set<String> tags; // required
  public Map<DeliveryType,Double> deliveryCosts; // required
  public Map<PaymentType,Double> paymentTypes; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    DESCR((short)3, "descr"),
    ADDRESS((short)4, "address"),
    LOGO_URL((short)5, "logoURL"),
    OWNER_ID((short)6, "ownerId"),
    TOPIC_SET((short)7, "topicSet"),
    TAGS((short)8, "tags"),
    DELIVERY_COSTS((short)9, "deliveryCosts"),
    PAYMENT_TYPES((short)10, "paymentTypes");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCR
          return DESCR;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // LOGO_URL
          return LOGO_URL;
        case 6: // OWNER_ID
          return OWNER_ID;
        case 7: // TOPIC_SET
          return TOPIC_SET;
        case 8: // TAGS
          return TAGS;
        case 9: // DELIVERY_COSTS
          return DELIVERY_COSTS;
        case 10: // PAYMENT_TYPES
          return PAYMENT_TYPES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __OWNERID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCR, new org.apache.thrift.meta_data.FieldMetaData("descr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.vmesteonline.be.PostalAddress.class)));
    tmpMap.put(_Fields.LOGO_URL, new org.apache.thrift.meta_data.FieldMetaData("logoURL", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OWNER_ID, new org.apache.thrift.meta_data.FieldMetaData("ownerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOPIC_SET, new org.apache.thrift.meta_data.FieldMetaData("topicSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.TAGS, new org.apache.thrift.meta_data.FieldMetaData("tags", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.DELIVERY_COSTS, new org.apache.thrift.meta_data.FieldMetaData("deliveryCosts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DeliveryType.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.PAYMENT_TYPES, new org.apache.thrift.meta_data.FieldMetaData("paymentTypes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaymentType.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Shop.class, metaDataMap);
  }

  public Shop() {
  }

  public Shop(
    long id,
    String name,
    String descr,
    com.vmesteonline.be.PostalAddress address,
    String logoURL,
    long ownerId,
    Set<Long> topicSet,
    Set<String> tags,
    Map<DeliveryType,Double> deliveryCosts,
    Map<PaymentType,Double> paymentTypes)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.descr = descr;
    this.address = address;
    this.logoURL = logoURL;
    this.ownerId = ownerId;
    setOwnerIdIsSet(true);
    this.topicSet = topicSet;
    this.tags = tags;
    this.deliveryCosts = deliveryCosts;
    this.paymentTypes = paymentTypes;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Shop(Shop other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetDescr()) {
      this.descr = other.descr;
    }
    if (other.isSetAddress()) {
      this.address = new com.vmesteonline.be.PostalAddress(other.address);
    }
    if (other.isSetLogoURL()) {
      this.logoURL = other.logoURL;
    }
    this.ownerId = other.ownerId;
    if (other.isSetTopicSet()) {
      Set<Long> __this__topicSet = new HashSet<Long>(other.topicSet);
      this.topicSet = __this__topicSet;
    }
    if (other.isSetTags()) {
      Set<String> __this__tags = new HashSet<String>(other.tags);
      this.tags = __this__tags;
    }
    if (other.isSetDeliveryCosts()) {
      Map<DeliveryType,Double> __this__deliveryCosts = new HashMap<DeliveryType,Double>(other.deliveryCosts.size());
      for (Map.Entry<DeliveryType, Double> other_element : other.deliveryCosts.entrySet()) {

        DeliveryType other_element_key = other_element.getKey();
        Double other_element_value = other_element.getValue();

        DeliveryType __this__deliveryCosts_copy_key = other_element_key;

        Double __this__deliveryCosts_copy_value = other_element_value;

        __this__deliveryCosts.put(__this__deliveryCosts_copy_key, __this__deliveryCosts_copy_value);
      }
      this.deliveryCosts = __this__deliveryCosts;
    }
    if (other.isSetPaymentTypes()) {
      Map<PaymentType,Double> __this__paymentTypes = new HashMap<PaymentType,Double>(other.paymentTypes.size());
      for (Map.Entry<PaymentType, Double> other_element : other.paymentTypes.entrySet()) {

        PaymentType other_element_key = other_element.getKey();
        Double other_element_value = other_element.getValue();

        PaymentType __this__paymentTypes_copy_key = other_element_key;

        Double __this__paymentTypes_copy_value = other_element_value;

        __this__paymentTypes.put(__this__paymentTypes_copy_key, __this__paymentTypes_copy_value);
      }
      this.paymentTypes = __this__paymentTypes;
    }
  }

  public Shop deepCopy() {
    return new Shop(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.descr = null;
    this.address = null;
    this.logoURL = null;
    setOwnerIdIsSet(false);
    this.ownerId = 0;
    this.topicSet = null;
    this.tags = null;
    this.deliveryCosts = null;
    this.paymentTypes = null;
  }

  public long getId() {
    return this.id;
  }

  public Shop setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public Shop setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getDescr() {
    return this.descr;
  }

  public Shop setDescr(String descr) {
    this.descr = descr;
    return this;
  }

  public void unsetDescr() {
    this.descr = null;
  }

  /** Returns true if field descr is set (has been assigned a value) and false otherwise */
  public boolean isSetDescr() {
    return this.descr != null;
  }

  public void setDescrIsSet(boolean value) {
    if (!value) {
      this.descr = null;
    }
  }

  public com.vmesteonline.be.PostalAddress getAddress() {
    return this.address;
  }

  public Shop setAddress(com.vmesteonline.be.PostalAddress address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getLogoURL() {
    return this.logoURL;
  }

  public Shop setLogoURL(String logoURL) {
    this.logoURL = logoURL;
    return this;
  }

  public void unsetLogoURL() {
    this.logoURL = null;
  }

  /** Returns true if field logoURL is set (has been assigned a value) and false otherwise */
  public boolean isSetLogoURL() {
    return this.logoURL != null;
  }

  public void setLogoURLIsSet(boolean value) {
    if (!value) {
      this.logoURL = null;
    }
  }

  public long getOwnerId() {
    return this.ownerId;
  }

  public Shop setOwnerId(long ownerId) {
    this.ownerId = ownerId;
    setOwnerIdIsSet(true);
    return this;
  }

  public void unsetOwnerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OWNERID_ISSET_ID);
  }

  /** Returns true if field ownerId is set (has been assigned a value) and false otherwise */
  public boolean isSetOwnerId() {
    return EncodingUtils.testBit(__isset_bitfield, __OWNERID_ISSET_ID);
  }

  public void setOwnerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OWNERID_ISSET_ID, value);
  }

  public int getTopicSetSize() {
    return (this.topicSet == null) ? 0 : this.topicSet.size();
  }

  public java.util.Iterator<Long> getTopicSetIterator() {
    return (this.topicSet == null) ? null : this.topicSet.iterator();
  }

  public void addToTopicSet(long elem) {
    if (this.topicSet == null) {
      this.topicSet = new HashSet<Long>();
    }
    this.topicSet.add(elem);
  }

  public Set<Long> getTopicSet() {
    return this.topicSet;
  }

  public Shop setTopicSet(Set<Long> topicSet) {
    this.topicSet = topicSet;
    return this;
  }

  public void unsetTopicSet() {
    this.topicSet = null;
  }

  /** Returns true if field topicSet is set (has been assigned a value) and false otherwise */
  public boolean isSetTopicSet() {
    return this.topicSet != null;
  }

  public void setTopicSetIsSet(boolean value) {
    if (!value) {
      this.topicSet = null;
    }
  }

  public int getTagsSize() {
    return (this.tags == null) ? 0 : this.tags.size();
  }

  public java.util.Iterator<String> getTagsIterator() {
    return (this.tags == null) ? null : this.tags.iterator();
  }

  public void addToTags(String elem) {
    if (this.tags == null) {
      this.tags = new HashSet<String>();
    }
    this.tags.add(elem);
  }

  public Set<String> getTags() {
    return this.tags;
  }

  public Shop setTags(Set<String> tags) {
    this.tags = tags;
    return this;
  }

  public void unsetTags() {
    this.tags = null;
  }

  /** Returns true if field tags is set (has been assigned a value) and false otherwise */
  public boolean isSetTags() {
    return this.tags != null;
  }

  public void setTagsIsSet(boolean value) {
    if (!value) {
      this.tags = null;
    }
  }

  public int getDeliveryCostsSize() {
    return (this.deliveryCosts == null) ? 0 : this.deliveryCosts.size();
  }

  public void putToDeliveryCosts(DeliveryType key, double val) {
    if (this.deliveryCosts == null) {
      this.deliveryCosts = new HashMap<DeliveryType,Double>();
    }
    this.deliveryCosts.put(key, val);
  }

  public Map<DeliveryType,Double> getDeliveryCosts() {
    return this.deliveryCosts;
  }

  public Shop setDeliveryCosts(Map<DeliveryType,Double> deliveryCosts) {
    this.deliveryCosts = deliveryCosts;
    return this;
  }

  public void unsetDeliveryCosts() {
    this.deliveryCosts = null;
  }

  /** Returns true if field deliveryCosts is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryCosts() {
    return this.deliveryCosts != null;
  }

  public void setDeliveryCostsIsSet(boolean value) {
    if (!value) {
      this.deliveryCosts = null;
    }
  }

  public int getPaymentTypesSize() {
    return (this.paymentTypes == null) ? 0 : this.paymentTypes.size();
  }

  public void putToPaymentTypes(PaymentType key, double val) {
    if (this.paymentTypes == null) {
      this.paymentTypes = new HashMap<PaymentType,Double>();
    }
    this.paymentTypes.put(key, val);
  }

  public Map<PaymentType,Double> getPaymentTypes() {
    return this.paymentTypes;
  }

  public Shop setPaymentTypes(Map<PaymentType,Double> paymentTypes) {
    this.paymentTypes = paymentTypes;
    return this;
  }

  public void unsetPaymentTypes() {
    this.paymentTypes = null;
  }

  /** Returns true if field paymentTypes is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTypes() {
    return this.paymentTypes != null;
  }

  public void setPaymentTypesIsSet(boolean value) {
    if (!value) {
      this.paymentTypes = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case DESCR:
      if (value == null) {
        unsetDescr();
      } else {
        setDescr((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((com.vmesteonline.be.PostalAddress)value);
      }
      break;

    case LOGO_URL:
      if (value == null) {
        unsetLogoURL();
      } else {
        setLogoURL((String)value);
      }
      break;

    case OWNER_ID:
      if (value == null) {
        unsetOwnerId();
      } else {
        setOwnerId((Long)value);
      }
      break;

    case TOPIC_SET:
      if (value == null) {
        unsetTopicSet();
      } else {
        setTopicSet((Set<Long>)value);
      }
      break;

    case TAGS:
      if (value == null) {
        unsetTags();
      } else {
        setTags((Set<String>)value);
      }
      break;

    case DELIVERY_COSTS:
      if (value == null) {
        unsetDeliveryCosts();
      } else {
        setDeliveryCosts((Map<DeliveryType,Double>)value);
      }
      break;

    case PAYMENT_TYPES:
      if (value == null) {
        unsetPaymentTypes();
      } else {
        setPaymentTypes((Map<PaymentType,Double>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case NAME:
      return getName();

    case DESCR:
      return getDescr();

    case ADDRESS:
      return getAddress();

    case LOGO_URL:
      return getLogoURL();

    case OWNER_ID:
      return Long.valueOf(getOwnerId());

    case TOPIC_SET:
      return getTopicSet();

    case TAGS:
      return getTags();

    case DELIVERY_COSTS:
      return getDeliveryCosts();

    case PAYMENT_TYPES:
      return getPaymentTypes();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCR:
      return isSetDescr();
    case ADDRESS:
      return isSetAddress();
    case LOGO_URL:
      return isSetLogoURL();
    case OWNER_ID:
      return isSetOwnerId();
    case TOPIC_SET:
      return isSetTopicSet();
    case TAGS:
      return isSetTags();
    case DELIVERY_COSTS:
      return isSetDeliveryCosts();
    case PAYMENT_TYPES:
      return isSetPaymentTypes();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Shop)
      return this.equals((Shop)that);
    return false;
  }

  public boolean equals(Shop that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_descr = true && this.isSetDescr();
    boolean that_present_descr = true && that.isSetDescr();
    if (this_present_descr || that_present_descr) {
      if (!(this_present_descr && that_present_descr))
        return false;
      if (!this.descr.equals(that.descr))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_logoURL = true && this.isSetLogoURL();
    boolean that_present_logoURL = true && that.isSetLogoURL();
    if (this_present_logoURL || that_present_logoURL) {
      if (!(this_present_logoURL && that_present_logoURL))
        return false;
      if (!this.logoURL.equals(that.logoURL))
        return false;
    }

    boolean this_present_ownerId = true;
    boolean that_present_ownerId = true;
    if (this_present_ownerId || that_present_ownerId) {
      if (!(this_present_ownerId && that_present_ownerId))
        return false;
      if (this.ownerId != that.ownerId)
        return false;
    }

    boolean this_present_topicSet = true && this.isSetTopicSet();
    boolean that_present_topicSet = true && that.isSetTopicSet();
    if (this_present_topicSet || that_present_topicSet) {
      if (!(this_present_topicSet && that_present_topicSet))
        return false;
      if (!this.topicSet.equals(that.topicSet))
        return false;
    }

    boolean this_present_tags = true && this.isSetTags();
    boolean that_present_tags = true && that.isSetTags();
    if (this_present_tags || that_present_tags) {
      if (!(this_present_tags && that_present_tags))
        return false;
      if (!this.tags.equals(that.tags))
        return false;
    }

    boolean this_present_deliveryCosts = true && this.isSetDeliveryCosts();
    boolean that_present_deliveryCosts = true && that.isSetDeliveryCosts();
    if (this_present_deliveryCosts || that_present_deliveryCosts) {
      if (!(this_present_deliveryCosts && that_present_deliveryCosts))
        return false;
      if (!this.deliveryCosts.equals(that.deliveryCosts))
        return false;
    }

    boolean this_present_paymentTypes = true && this.isSetPaymentTypes();
    boolean that_present_paymentTypes = true && that.isSetPaymentTypes();
    if (this_present_paymentTypes || that_present_paymentTypes) {
      if (!(this_present_paymentTypes && that_present_paymentTypes))
        return false;
      if (!this.paymentTypes.equals(that.paymentTypes))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(Shop other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescr()).compareTo(other.isSetDescr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descr, other.descr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogoURL()).compareTo(other.isSetLogoURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogoURL()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logoURL, other.logoURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOwnerId()).compareTo(other.isSetOwnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOwnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ownerId, other.ownerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTopicSet()).compareTo(other.isSetTopicSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTopicSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.topicSet, other.topicSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTags()).compareTo(other.isSetTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTags()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tags, other.tags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryCosts()).compareTo(other.isSetDeliveryCosts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryCosts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCosts, other.deliveryCosts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTypes()).compareTo(other.isSetPaymentTypes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTypes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTypes, other.paymentTypes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Shop(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descr:");
    if (this.descr == null) {
      sb.append("null");
    } else {
      sb.append(this.descr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("logoURL:");
    if (this.logoURL == null) {
      sb.append("null");
    } else {
      sb.append(this.logoURL);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ownerId:");
    sb.append(this.ownerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("topicSet:");
    if (this.topicSet == null) {
      sb.append("null");
    } else {
      sb.append(this.topicSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tags:");
    if (this.tags == null) {
      sb.append("null");
    } else {
      sb.append(this.tags);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryCosts:");
    if (this.deliveryCosts == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryCosts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTypes:");
    if (this.paymentTypes == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentTypes);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (address != null) {
      address.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ShopStandardSchemeFactory implements SchemeFactory {
    public ShopStandardScheme getScheme() {
      return new ShopStandardScheme();
    }
  }

  private static class ShopStandardScheme extends StandardScheme<Shop> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Shop struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descr = iprot.readString();
              struct.setDescrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.address = new com.vmesteonline.be.PostalAddress();
              struct.address.read(iprot);
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOGO_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logoURL = iprot.readString();
              struct.setLogoURLIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OWNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.ownerId = iprot.readI64();
              struct.setOwnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TOPIC_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.topicSet = new HashSet<Long>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  long _elem2;
                  _elem2 = iprot.readI64();
                  struct.topicSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setTopicSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TAGS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.tags = new HashSet<String>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  String _elem5;
                  _elem5 = iprot.readString();
                  struct.tags.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setTagsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DELIVERY_COSTS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map6 = iprot.readMapBegin();
                struct.deliveryCosts = new HashMap<DeliveryType,Double>(2*_map6.size);
                for (int _i7 = 0; _i7 < _map6.size; ++_i7)
                {
                  DeliveryType _key8;
                  double _val9;
                  _key8 = DeliveryType.findByValue(iprot.readI32());
                  _val9 = iprot.readDouble();
                  struct.deliveryCosts.put(_key8, _val9);
                }
                iprot.readMapEnd();
              }
              struct.setDeliveryCostsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PAYMENT_TYPES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map10 = iprot.readMapBegin();
                struct.paymentTypes = new HashMap<PaymentType,Double>(2*_map10.size);
                for (int _i11 = 0; _i11 < _map10.size; ++_i11)
                {
                  PaymentType _key12;
                  double _val13;
                  _key12 = PaymentType.findByValue(iprot.readI32());
                  _val13 = iprot.readDouble();
                  struct.paymentTypes.put(_key12, _val13);
                }
                iprot.readMapEnd();
              }
              struct.setPaymentTypesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Shop struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.descr != null) {
        oprot.writeFieldBegin(DESCR_FIELD_DESC);
        oprot.writeString(struct.descr);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        struct.address.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.logoURL != null) {
        oprot.writeFieldBegin(LOGO_URL_FIELD_DESC);
        oprot.writeString(struct.logoURL);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(OWNER_ID_FIELD_DESC);
      oprot.writeI64(struct.ownerId);
      oprot.writeFieldEnd();
      if (struct.topicSet != null) {
        oprot.writeFieldBegin(TOPIC_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.topicSet.size()));
          for (long _iter14 : struct.topicSet)
          {
            oprot.writeI64(_iter14);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.tags != null) {
        oprot.writeFieldBegin(TAGS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.tags.size()));
          for (String _iter15 : struct.tags)
          {
            oprot.writeString(_iter15);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.deliveryCosts != null) {
        oprot.writeFieldBegin(DELIVERY_COSTS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.DOUBLE, struct.deliveryCosts.size()));
          for (Map.Entry<DeliveryType, Double> _iter16 : struct.deliveryCosts.entrySet())
          {
            oprot.writeI32(_iter16.getKey().getValue());
            oprot.writeDouble(_iter16.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.paymentTypes != null) {
        oprot.writeFieldBegin(PAYMENT_TYPES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.DOUBLE, struct.paymentTypes.size()));
          for (Map.Entry<PaymentType, Double> _iter17 : struct.paymentTypes.entrySet())
          {
            oprot.writeI32(_iter17.getKey().getValue());
            oprot.writeDouble(_iter17.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ShopTupleSchemeFactory implements SchemeFactory {
    public ShopTupleScheme getScheme() {
      return new ShopTupleScheme();
    }
  }

  private static class ShopTupleScheme extends TupleScheme<Shop> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Shop struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescr()) {
        optionals.set(2);
      }
      if (struct.isSetAddress()) {
        optionals.set(3);
      }
      if (struct.isSetLogoURL()) {
        optionals.set(4);
      }
      if (struct.isSetOwnerId()) {
        optionals.set(5);
      }
      if (struct.isSetTopicSet()) {
        optionals.set(6);
      }
      if (struct.isSetTags()) {
        optionals.set(7);
      }
      if (struct.isSetDeliveryCosts()) {
        optionals.set(8);
      }
      if (struct.isSetPaymentTypes()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetDescr()) {
        oprot.writeString(struct.descr);
      }
      if (struct.isSetAddress()) {
        struct.address.write(oprot);
      }
      if (struct.isSetLogoURL()) {
        oprot.writeString(struct.logoURL);
      }
      if (struct.isSetOwnerId()) {
        oprot.writeI64(struct.ownerId);
      }
      if (struct.isSetTopicSet()) {
        {
          oprot.writeI32(struct.topicSet.size());
          for (long _iter18 : struct.topicSet)
          {
            oprot.writeI64(_iter18);
          }
        }
      }
      if (struct.isSetTags()) {
        {
          oprot.writeI32(struct.tags.size());
          for (String _iter19 : struct.tags)
          {
            oprot.writeString(_iter19);
          }
        }
      }
      if (struct.isSetDeliveryCosts()) {
        {
          oprot.writeI32(struct.deliveryCosts.size());
          for (Map.Entry<DeliveryType, Double> _iter20 : struct.deliveryCosts.entrySet())
          {
            oprot.writeI32(_iter20.getKey().getValue());
            oprot.writeDouble(_iter20.getValue());
          }
        }
      }
      if (struct.isSetPaymentTypes()) {
        {
          oprot.writeI32(struct.paymentTypes.size());
          for (Map.Entry<PaymentType, Double> _iter21 : struct.paymentTypes.entrySet())
          {
            oprot.writeI32(_iter21.getKey().getValue());
            oprot.writeDouble(_iter21.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Shop struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.descr = iprot.readString();
        struct.setDescrIsSet(true);
      }
      if (incoming.get(3)) {
        struct.address = new com.vmesteonline.be.PostalAddress();
        struct.address.read(iprot);
        struct.setAddressIsSet(true);
      }
      if (incoming.get(4)) {
        struct.logoURL = iprot.readString();
        struct.setLogoURLIsSet(true);
      }
      if (incoming.get(5)) {
        struct.ownerId = iprot.readI64();
        struct.setOwnerIdIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set22 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.topicSet = new HashSet<Long>(2*_set22.size);
          for (int _i23 = 0; _i23 < _set22.size; ++_i23)
          {
            long _elem24;
            _elem24 = iprot.readI64();
            struct.topicSet.add(_elem24);
          }
        }
        struct.setTopicSetIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TSet _set25 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.tags = new HashSet<String>(2*_set25.size);
          for (int _i26 = 0; _i26 < _set25.size; ++_i26)
          {
            String _elem27;
            _elem27 = iprot.readString();
            struct.tags.add(_elem27);
          }
        }
        struct.setTagsIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TMap _map28 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
          struct.deliveryCosts = new HashMap<DeliveryType,Double>(2*_map28.size);
          for (int _i29 = 0; _i29 < _map28.size; ++_i29)
          {
            DeliveryType _key30;
            double _val31;
            _key30 = DeliveryType.findByValue(iprot.readI32());
            _val31 = iprot.readDouble();
            struct.deliveryCosts.put(_key30, _val31);
          }
        }
        struct.setDeliveryCostsIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TMap _map32 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
          struct.paymentTypes = new HashMap<PaymentType,Double>(2*_map32.size);
          for (int _i33 = 0; _i33 < _map32.size; ++_i33)
          {
            PaymentType _key34;
            double _val35;
            _key34 = PaymentType.findByValue(iprot.readI32());
            _val35 = iprot.readDouble();
            struct.paymentTypes.put(_key34, _val35);
          }
        }
        struct.setPaymentTypesIsSet(true);
      }
    }
  }

}

